{"id":149,"name":"Max Points on a Line","slug":"max-points-on-a-line","link":"https://leetcode.com/problems/max-points-on-a-line","percent":15.31668369267165,"level":"Hard","category":"algorithms","totalAC":"79.8K","totalSubmit":"520.8K","desc":"Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.","templates":[{"value":"cpp","text":"C++","defaultCode":"/**\r\n * Definition for a point.\r\n * struct Point {\r\n *     int x;\r\n *     int y;\r\n *     Point() : x(0), y(0) {}\r\n *     Point(int a, int b) : x(a), y(b) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    int maxPoints(vector<Point>& points) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"/**\r\n * Definition for a point.\r\n * class Point {\r\n *     int x;\r\n *     int y;\r\n *     Point() { x = 0; y = 0; }\r\n *     Point(int a, int b) { x = a; y = b; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public int maxPoints(Point[] points) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"# Definition for a point.\r\n# class Point(object):\r\n#     def __init__(self, a=0, b=0):\r\n#         self.x = a\r\n#         self.y = b\r\n\r\nclass Solution(object):\r\n    def maxPoints(self, points):\r\n        \"\"\"\r\n        :type points: List[Point]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Definition for a point.\r\n * struct Point {\r\n *     int x;\r\n *     int y;\r\n * }\r\n */\r\nint maxPoints(struct Point* points, int pointsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"/**\r\n * Definition for a point.\r\n * public class Point {\r\n *     public int x;\r\n *     public int y;\r\n *     public Point() { x = 0; y = 0; }\r\n *     public Point(int a, int b) { x = a; y = b; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public int MaxPoints(Point[] points) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * Definition for a point.\r\n * function Point(x, y) {\r\n *     this.x = x;\r\n *     this.y = y;\r\n * }\r\n */\r\n/**\r\n * @param {Point[]} points\r\n * @return {number}\r\n */\r\nvar maxPoints = function(points) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# Definition for a point.\r\n# class Point\r\n#     attr_accessor :x, :y\r\n#     def initialize(x=0, y=0)\r\n#         @x = x\r\n#         @y = y\r\n#     end\r\n# end\r\n\r\n# @param {Point[]} points\r\n# @return {Integer}\r\ndef max_points(points)\r\n    \r\nend"},{"value":"golang","text":"Go","defaultCode":"/**\r\n * Definition for a point.\r\n * type Point struct {\r\n *     X int\r\n *     Y int\r\n * }\r\n */\r\nfunc maxPoints(points []Point) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"/**\n * Definition for a point.\n * class Point(var _x: Int, var _y: Int) {\n *     var x: Int = _x\n *     var y: Int = _y\n * }\n */\nobject Solution {\n    def maxPoints(points: Array[Point]): Int = {\n        \n    }\n}"}],"testcase":"[]","testable":true}