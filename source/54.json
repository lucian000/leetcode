{"id":54,"name":"Spiral Matrix","slug":"spiral-matrix","link":"https://leetcode.com/problems/spiral-matrix","percent":25.776733243204603,"level":"Medium","category":"algorithms","totalAC":"102.8K","totalSubmit":"398.8K","desc":"Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.\r\n\r\n\r\n\r\nFor example,\r\nGiven the following matrix:\r\n\r\n\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n\r\n\r\nYou should return [1,2,3,6,9,8,7,4,5].\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\r\n    public List<Integer> spiralOrder(int[][] matrix) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def spiralOrder(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[int]]\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"/**\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* spiralOrder(int** matrix, int matrixRowSize, int matrixColSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public IList<int> SpiralOrder(int[,] matrix) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[][]} matrix\r\n * @return {number[]}\r\n */\r\nvar spiralOrder = function(matrix) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} matrix\r\n# @return {Integer[]}\r\ndef spiral_order(matrix)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func spiralOrder(_ matrix: [[Int]]) -> [Int] {\r\n        \r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func spiralOrder(matrix [][]int) []int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def spiralOrder(matrix: Array[Array[Int]]): List[Int] = {\n        \n    }\n}"}],"testcase":"[[1,2,3],[4,5,6],[7,8,9]]","testable":true}