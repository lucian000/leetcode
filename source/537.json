{
 "id": 537,
 "name": "Complex Number Multiplication",
 "key": "complex-number-multiplication",
 "link": "https://leetcode.com/problems/complex-number-multiplication",
 "percent": 64.42188514430738,
 "level": "Medium",
 "totalAC": "",
 "totalSubmit": "",
 "desc": "\r\nGiven two strings representing two complex numbers.\r\n\r\n\r\nYou need to return a string representing their multiplication. Note i2 = -1 according to the definition.\r\n\r\n\r\nExample 1:\r\n\r\nInput: \"1+1i\", \"1+1i\"\r\nOutput: \"0+2i\"\r\nExplanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: \"1+-1i\", \"1+-1i\"\r\nOutput: \"0+-2i\"\r\nExplanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe input strings will not have extra blank.\r\nThe input strings will be given in the form of a+bi, where the integer a and b will both belong to the range of [-100, 100]. And the output should be also in this form.\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\npublic:\n    string complexNumberMultiply(string a, string b) {\n        \n    }\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\n    public String complexNumberMultiply(String a, String b) {\n        \n    }\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\n    def complexNumberMultiply(self, a, b):\n        \"\"\"\n        :type a: str\n        :type b: str\n        :rtype: str\n        \"\"\"\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "char* complexNumberMultiply(char* a, char* b) {\n    \n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\n    public string ComplexNumberMultiply(string a, string b) {\n        \n    }\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\n * @param {string} a\n * @param {string} b\n * @return {string}\n */\nvar complexNumberMultiply = function(a, b) {\n    \n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} a\n# @param {String} b\n# @return {String}\ndef complex_number_multiply(a, b)\n    \nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func complexNumberMultiply(_ a: String, _ b: String) -> String {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func complexNumberMultiply(a string, b string) string {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def complexNumberMultiply(a: String, b: String): String = {\n        \n    }\n}"
  }
 ],
 "testcase": "\"1+1i\"\n\"1+1i\"",
 "testable": true
}