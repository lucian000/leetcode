{
 "id": 540,
 "name": "Single Element in a Sorted Array",
 "key": "single-element-in-a-sorted-array",
 "link": "https://leetcode.com/problems/single-element-in-a-sorted-array",
 "percent": 54.166879828106616,
 "level": "Medium",
 "totalAC": "",
 "totalSubmit": "",
 "desc": "\r\nGiven a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once. \r\n\r\n\r\nExample 1:\r\n\r\nInput: [1,1,2,3,3,4,4,8,8]\r\nOutput: 2\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3,3,7,7,10,11,11]\r\nOutput: 10\r\n\r\n\r\n\r\nNote:\r\nYour solution should run in O(log n) time and O(1) space.\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\npublic:\n    int singleNonDuplicate(vector<int>& nums) {\n        \n    }\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\n    public int singleNonDuplicate(int[] nums) {\n        \n    }\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\n    def singleNonDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int singleNonDuplicate(int* nums, int numsSize) {\n    \n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\n    public int SingleNonDuplicate(int[] nums) {\n        \n    }\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNonDuplicate = function(nums) {\n    \n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\n# @return {Integer}\ndef single_non_duplicate(nums)\n    \nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func singleNonDuplicate(_ nums: [Int]) -> Int {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func singleNonDuplicate(nums []int) int {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def singleNonDuplicate(nums: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "[1,1,2]",
 "testable": true
}