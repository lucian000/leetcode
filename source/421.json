{
 "id": 421,
 "name": "Maximum XOR of Two Numbers in an Array",
 "key": "maximum-xor-of-two-numbers-in-an-array",
 "link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array",
 "percent": 45.22147696707637,
 "level": "Medium",
 "totalAC": "",
 "totalSubmit": "",
 "desc": "Given a non-empty array of numbers, a0, a1, a2, \u2026 , an-1, where 0 \u2264 ai < 231.\r\n\r\nFind the maximum result of ai XOR aj, where 0 \u2264 i, j < n.\r\n\r\nCould you do this in O(n) runtime?\r\n\r\nExample:\r\n\r\nInput: [3, 10, 5, 25, 2, 8]\r\n\r\nOutput: 28\r\n\r\nExplanation: The maximum result is 5 ^ 25 = 28.\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int findMaximumXOR(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int findMaximumXOR(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def findMaximumXOR(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\""
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int findMaximumXOR(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int FindMaximumXOR(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar findMaximumXOR = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef find_maximum_xor(nums)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func findMaximumXOR(_ nums: [Int]) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func findMaximumXOR(nums []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def findMaximumXOR(nums: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "[3,10,5,25,2,8]",
 "testable": true
}