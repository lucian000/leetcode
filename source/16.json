{"id":16,"name":"3Sum Closest","slug":"3sum-closest","link":"https://leetcode.com/problems/3sum-closest","percent":31.027588870811044,"level":"Medium","category":"algorithms","totalAC":"132.5K","totalSubmit":"427.2K","desc":"Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\r\n\r\n\r\n    For example, given array S = {-1 2 1 -4}, and target = 1.\r\n\r\n    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int threeSumClosest(vector<int>& nums, int target) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\r\n    public int threeSumClosest(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def threeSumClosest(self, nums, target):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type target: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int threeSumClosest(int* nums, int numsSize, int target) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int ThreeSumClosest(int[] nums, int target) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {number}\r\n */\r\nvar threeSumClosest = function(nums, target) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @param {Integer} target\r\n# @return {Integer}\r\ndef three_sum_closest(nums, target)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func threeSumClosest(_ nums: [Int], _ target: Int) -> Int {\r\n        \r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func threeSumClosest(nums []int, target int) int {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def threeSumClosest(nums: Array[Int], target: Int): Int = {\n        \n    }\n}"}],"testcase":"[0,0,0]\n1","testable":true}