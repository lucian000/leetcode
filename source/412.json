{"id":412,"name":"Fizz Buzz","key":"fizz-buzz","link":"https://leetcode.com/problems/fizz-buzz","percent":58.83731718631736,"level":"Easy","totalAC":"","totalSubmit":"","desc":"Write a program that outputs the string representation of numbers from 1 to n.\r\n\r\nBut for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.\r\n\r\nExample:\r\n\r\nn = 15,\r\n\r\nReturn:\r\n[\r\n    \"1\",\r\n    \"2\",\r\n    \"Fizz\",\r\n    \"4\",\r\n    \"Buzz\",\r\n    \"Fizz\",\r\n    \"7\",\r\n    \"8\",\r\n    \"Fizz\",\r\n    \"Buzz\",\r\n    \"11\",\r\n    \"Fizz\",\r\n    \"13\",\r\n    \"14\",\r\n    \"FizzBuzz\"\r\n]\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<string> fizzBuzz(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\n    public List<String> fizzBuzz(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def fizzBuzz(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Return an array of size *returnSize.\n * Note: The returned array must be malloced, assume caller calls free().\n */\nchar** fizzBuzz(int n, int* returnSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public IList<string> FizzBuzz(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {string[]}\n */\nvar fizzBuzz = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {String[]}\ndef fizz_buzz(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func fizzBuzz(_ n: Int) -> [String] {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func fizzBuzz(n int) []string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def fizzBuzz(n: Int): List[String] = {\n        \n    }\n}"}],"testcase":"1","testable":true}