{"id":456,"name":"132 Pattern","slug":"132-pattern","link":"https://leetcode.com/problems/132-pattern","percent":28.626912203757033,"level":"Medium","category":"algorithms","totalAC":"10.8K","totalSubmit":"37.8K","desc":"\r\nGiven a sequence of n integers a1, a2, ..., an, a 132 pattern is a subsequence ai, aj, ak such\r\nthat i < j < k and ai < ak < aj. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.\r\n\r\nNote: n will be less than 15,000.\r\n\r\nExample 1:\r\n\r\nInput: [1, 2, 3, 4]\r\n\r\nOutput: False\r\n\r\nExplanation: There is no 132 pattern in the sequence.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput: [3, 1, 4, 2]\r\n\r\nOutput: True\r\n\r\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [-1, 3, 2, 0]\r\n\r\nOutput: True\r\n\r\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\r\n\r\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    bool find132pattern(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\r\n    public boolean find132pattern(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def find132pattern(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: bool\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"bool find132pattern(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public bool Find132pattern(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {boolean}\r\n */\r\nvar find132pattern = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Boolean}\r\ndef find132pattern(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func find132pattern(_ nums: [Int]) -> Bool {\r\n        \r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func find132pattern(nums []int) bool {\r\n    \r\n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def find132pattern(nums: Array[Int]): Boolean = {\n        \n    }\n}"}],"testcase":"[1,2,3,4]","testable":true}