{"id":300,"name":"Longest Increasing Subsequence","slug":"longest-increasing-subsequence","link":"https://leetcode.com/problems/longest-increasing-subsequence","percent":38.259252283642525,"level":"Medium","category":"algorithms","totalAC":"81.3K","totalSubmit":"212.4K","desc":"\r\nGiven an unsorted array of integers, find the length of longest increasing subsequence.\r\n\r\n\r\nFor example,\r\nGiven [10, 9, 2, 5, 3, 7, 101, 18],\r\nThe longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length.\r\n\r\n\r\nYour algorithm should run in O(n2) complexity.\r\n\r\n\r\nFollow up: Could you improve it to O(n log n) time complexity? \r\n\r\nCredits:Special thanks to @pbrother for adding this problem and creating all test cases.","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int lengthOfLIS(vector<int>& nums) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\r\n    public int lengthOfLIS(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def lengthOfLIS(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int lengthOfLIS(int* nums, int numsSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int LengthOfLIS(int[] nums) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar lengthOfLIS = function(nums) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef length_of_lis(nums)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\r\n    func lengthOfLIS(_ nums: [Int]) -> Int {\r\n        \r\n    }\r\n}"},{"value":"golang","text":"Go","defaultCode":"func lengthOfLIS(nums []int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def lengthOfLIS(nums: Array[Int]): Int = {\n        \n    }\n}"}],"testcase":"[10,9,2,5,3,7,101,18]","testable":true}