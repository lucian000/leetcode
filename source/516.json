{
 "id": 516,
 "name": "Longest Palindromic Subsequence",
 "key": "longest-palindromic-subsequence",
 "link": "https://leetcode.com/problems/longest-palindromic-subsequence",
 "percent": 42.45813710099424,
 "level": "Medium",
 "totalAC": "",
 "totalSubmit": "",
 "desc": "\r\nGiven a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.\r\n\r\n\r\nExample 1:\r\nInput: \r\n\r\n\"bbbab\"\r\n\r\nOutput: \r\n\r\n4\r\n\r\nOne possible longest palindromic subsequence is \"bbbb\".\r\n\r\n\r\nExample 2:\r\nInput:\r\n\r\n\"cbbd\"\r\n\r\nOutput:\r\n\r\n2\r\n\r\nOne possible longest palindromic subsequence is \"bb\".\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int longestPalindromeSubseq(string s) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int longestPalindromeSubseq(String s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def longestPalindromeSubseq(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int longestPalindromeSubseq(char* s) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int LongestPalindromeSubseq(string s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {string} s\r\n * @return {number}\r\n */\r\nvar longestPalindromeSubseq = function(s) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} s\r\n# @return {Integer}\r\ndef longest_palindrome_subseq(s)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func longestPalindromeSubseq(_ s: String) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func longestPalindromeSubseq(s string) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def longestPalindromeSubseq(s: String): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "\"bbbab\"",
 "testable": true
}