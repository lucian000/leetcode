{"text": ["[352] Data Stream as Disjoint Intervals  \t(File: 352.data-stream-as-disjoint-intervals.py)\n", "\n", "https://leetcode.com/problems/data-stream-as-disjoint-intervals\n", "\n", "* Hard (39.94%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[\"SummaryRanges\",\"addNum\",\"getIntervals\",\"addNum\",\"getIntervals\",\"addNum\",\"getIntervals\",\"addNum\",\"getIntervals\",\"addNum\",\"getIntervals\"]\\n[[],[1],[],[3],[],[7],[],[2],[],[6],[]]'\n", "\n", "Given a data stream input of non-negative integers a1, a2, ..., an, ..., summarize the numbers seen so far as a list of disjoint intervals.\n", "\n", "For example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:\n", "\n", "[1, 1]\n", "[1, 1], [3, 3]\n", "[1, 1], [3, 3], [7, 7]\n", "[1, 3], [7, 7]\n", "[1, 3], [6, 7]\n", "\n", "\n", "Follow up:\n", "What if there are lots of merges and the number of disjoint intervals are small compared to the data stream's size?\n", "\n", "\n", "Credits:Special thanks to @yunhong for adding this problem and creating most of the test cases.\n"], "filename": "352.data-stream-as-disjoint-intervals.py"}