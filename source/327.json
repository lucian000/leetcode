{"text": ["[327] Count of Range Sum  \t(File: 327.count-of-range-sum.py)\n", "\n", "https://leetcode.com/problems/count-of-range-sum\n", "\n", "* Hard (29.52%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[-2,5,-1]\\n-2\\n2'\n", "\n", "\n", "    Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive.\n", "\n", "    Range sum S(i, j) is defined as the sum of the elements in nums between indices i and \n", "    j (i ? j), inclusive.\n", "\n", "\n", "\n", "    Note:\n", "    A naive algorithm of O(n2) is trivial. You MUST do better than that.\n", "\n", "\n", "    Example:\n", "    Given nums = [-2, 5, -1], lower = -2, upper = 2,\n", "    Return 3.\n", "    The three ranges are : [0, 0], [2, 2], [0, 2] and their respective sums are: -2, -1, 2.\n", "\n", "\n", "Credits:Special thanks to @dietpepsi for adding this problem and creating all test cases.\n"], "filename": "327.count-of-range-sum.py"}