{"id":188,"name":"Best Time to Buy and Sell Stock IV","slug":"best-time-to-buy-and-sell-stock-iv","link":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","percent":24.238658194942857,"level":"Hard","category":"algorithms","totalAC":"46.8K","totalSubmit":"193.1K","desc":"Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most k transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\r\npublic:\r\n    int maxProfit(int k, vector<int>& prices) {\r\n        \r\n    }\r\n};"},{"value":"java","text":"Java","defaultCode":"public class Solution {\r\n    public int maxProfit(int k, int[] prices) {\r\n        \r\n    }\r\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\r\n    def maxProfit(self, k, prices):\r\n        \"\"\"\r\n        :type k: int\r\n        :type prices: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "},{"value":"c","text":"C","defaultCode":"int maxProfit(int k, int* prices, int pricesSize) {\r\n    \r\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\r\n    public int MaxProfit(int k, int[] prices) {\r\n        \r\n    }\r\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\r\n * @param {number} k\r\n * @param {number[]} prices\r\n * @return {number}\r\n */\r\nvar maxProfit = function(k, prices) {\r\n    \r\n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} k\r\n# @param {Integer[]} prices\r\n# @return {Integer}\r\ndef max_profit(k, prices)\r\n    \r\nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func maxProfit(_ k: Int, _ prices: [Int]) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func maxProfit(k int, prices []int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def maxProfit(k: Int, prices: Array[Int]): Int = {\n        \n    }\n}"}],"testcase":"2\n[]","testable":true}