{"text": ["[381] Insert Delete GetRandom O(1) - Duplicates allowed  \t(File: 381.insert-delete-getrandom-o1-duplicates-allowed.py)\n", "\n", "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed\n", "\n", "* Hard (28.67%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[\"RandomizedCollection\",\"insert\",\"insert\",\"insert\",\"getRandom\",\"remove\",\"getRandom\"]\\n[[],[1],[1],[2],[],[1],[]]'\n", "\n", "Design a data structure that supports all following operations in average O(1) time.\n", "Note: Duplicate elements are allowed.\n", "\n", "\n", "insert(val): Inserts an item val to the collection.\n", "remove(val): Removes an item val from the collection if present.\n", "getRandom: Returns a random element from current collection of elements. The probability of each element being returned is linearly related to the number of same value the collection contains.\n", "\n", "\n", "\n", "Example:\n", "\n", "// Init an empty collection.\n", "RandomizedCollection collection = new RandomizedCollection();\n", "\n", "// Inserts 1 to the collection. Returns true as the collection did not contain 1.\n", "collection.insert(1);\n", "\n", "// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\n", "collection.insert(1);\n", "\n", "// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\n", "collection.insert(2);\n", "\n", "// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\n", "collection.getRandom();\n", "\n", "// Removes 1 from the collection, returns true. Collection now contains [1,2].\n", "collection.remove(1);\n", "\n", "// getRandom should return 1 and 2 both equally likely.\n", "collection.getRandom();\n", "\n", "\n"], "filename": "381.insert-delete-getrandom-o1-duplicates-allowed.py"}