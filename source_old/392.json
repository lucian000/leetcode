{"text": ["[392] Is Subsequence  \t(File: 392.is-subsequence.py)\n", "\n", "https://leetcode.com/problems/is-subsequence\n", "\n", "* Medium (44.37%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '\"abc\"\\n\"ahbgdc\"'\n", "\n", "\n", "Given a string s and a string t, check if s is subsequence of t.\n", "\n", "\n", "\n", "You may assume that there is only lower case English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).\n", "\n", "\n", "\n", "A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\n", "\n", "\n", "Example 1:\n", "s = \"abc\", t = \"ahbgdc\"\n", "\n", "\n", "Return true.\n", "\n", "\n", "Example 2:\n", "s = \"axc\", t = \"ahbgdc\"\n", "\n", "\n", "Return false.\n", "\n", "\n", "Follow up:\n", "If there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?\n", "\n", "Credits:Special thanks to @pbrother for adding this problem and creating all test cases.\n"], "filename": "392.is-subsequence.py"}