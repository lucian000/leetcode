{"text": ["[332] Reconstruct Itinerary  \t(File: 332.reconstruct-itinerary.py)\n", "\n", "https://leetcode.com/problems/reconstruct-itinerary\n", "\n", "* Medium (29.00%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[[\"MUC\",\"LHR\"],[\"JFK\",\"MUC\"],[\"SFO\",\"SJC\"],[\"LHR\",\"SFO\"]]'\n", "\n", "Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with JFK.\n", "\n", "\n", "Note:\n", "\n", "If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\n", "All airports are represented by three capital letters (IATA code).\n", "You may assume all tickets form at least one valid itinerary.\n", "\n", "\n", "\n", "\n", "    Example 1:\n", "    tickets = [[\"MUC\", \"LHR\"], [\"JFK\", \"MUC\"], [\"SFO\", \"SJC\"], [\"LHR\", \"SFO\"]]\n", "    Return [\"JFK\", \"MUC\", \"LHR\", \"SFO\", \"SJC\"].\n", "\n", "\n", "    Example 2:\n", "    tickets = [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]\n", "    Return [\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"].\n", "    Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"]. But it is larger in lexical order.\n", "\n", "\n", "Credits:Special thanks to @dietpepsi for adding this problem and creating all test cases.\n"], "filename": "332.reconstruct-itinerary.py"}