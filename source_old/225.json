{"text": ["[225] Implement Stack using Queues  \t(File: 225.implement-stack-using-queues.py)\n", "\n", "https://leetcode.com/problems/implement-stack-using-queues\n", "\n", "* Easy (32.59%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[\"MyStack\",\"empty\"]\\n[[],[]]'\n", "\n", "\n", "Implement the following operations of a stack using queues.\n", "\n", "\n", "push(x) -- Push element x onto stack.\n", "\n", "\n", "pop() -- Removes the element on top of the stack.\n", "\n", "\n", "top() -- Get the top element.\n", "\n", "\n", "empty() -- Return whether the stack is empty.\n", "\n", "\n", "Notes:\n", "\n", "You must use only standard operations of a queue -- which means only push to back, peek/pop from front, size, and is empty operations are valid.\n", "Depending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.\n", "You may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).\n", "\n", "\n", "\n", "Credits:Special thanks to @jianchao.li.fighter for adding this problem and all test cases.\n"], "filename": "225.implement-stack-using-queues.py"}