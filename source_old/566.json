{"text": ["[566] Reshape the Matrix  \t(File: 566.reshape-the-matrix.py)\n", "\n", "https://leetcode.com/problems/reshape-the-matrix\n", "\n", "* Easy (59.86%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[[1,2],[3,4]]\\n1\\n4'\n", "\n", "In MATLAB, there is a very useful function called 'reshape', which can reshape a matrix into a new one with different size but keep its original data.\n", "\n", "\n", "\n", "You're given a matrix represented by a two-dimensional array, and two positive integers r and c representing the row number and column number of the wanted reshaped matrix, respectively.\n", "\n", " The reshaped matrix need to be filled with all the elements of the original matrix in the same row-traversing order as they were.\n", "\n", "\n", "\n", "If the 'reshape' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n", "\n", "\n", "Example 1:\n", "\n", "Input: \n", "nums = \n", "[[1,2],\n", " [3,4]]\n", "r = 1, c = 4\n", "Output: \n", "[[1,2,3,4]]\n", "Explanation:The row-traversing of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\n", "\n", "\n", "\n", "Example 2:\n", "\n", "Input: \n", "nums = \n", "[[1,2],\n", " [3,4]]\n", "r = 2, c = 4\n", "Output: \n", "[[1,2],\n", " [3,4]]\n", "Explanation:There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\n", "\n", "\n", "\n", "Note:\n", "\n", "The height and width of the given matrix is in range [1, 100].\n", "The given r and c are all positive.\n", "\n", "\n"], "filename": "566.reshape-the-matrix.py"}