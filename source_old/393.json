{"text": ["[393] UTF-8 Validation  \t(File: 393.utf-8-validation.py)\n", "\n", "https://leetcode.com/problems/utf-8-validation\n", "\n", "* Medium (34.80%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '[197,130,1]'\n", "\n", "A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\n", "\n", "For 1-byte character, the first bit is a 0, followed by its unicode code.\n", "For n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.\n", "\n", "This is how the UTF-8 encoding would work:\n", "\n", "   Char. number range  |        UTF-8 octet sequence\n", "      (hexadecimal)    |              (binary)\n", "   --------------------+---------------------------------------------\n", "   0000 0000-0000 007F | 0xxxxxxx\n", "   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n", "   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n", "   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n", "\n", "\n", "Given an array of integers representing the data, return whether it is a valid utf-8 encoding.\n", "\n", "\n", "Note:\n", "The input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\n", "\n", "\n", "\n", "Example 1:\n", "\n", "data = [197, 130, 1], which represents the octet sequence: 11000101 10000010 00000001.\n", "\n", "Return true.\n", "It is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n", "\n", "\n", "\n", "\n", "Example 2:\n", "\n", "data = [235, 140, 4], which represented the octet sequence: 11101011 10001100 00000100.\n", "\n", "Return false.\n", "The first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\n", "The next byte is a continuation byte which starts with 10 and that's correct.\n", "But the second continuation byte does not start with 10, so it is invalid.\n", "\n", "\n"], "filename": "393.utf-8-validation.py"}