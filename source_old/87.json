{"text": ["[87] Scramble String  \t(File: 87.scramble-string.py)\n", "\n", "https://leetcode.com/problems/scramble-string\n", "\n", "* Hard (28.95%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '\"a\"\\n\"a\"'\n", "\n", "\n", "Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\n", "\n", "\n", "Below is one possible representation of s1 = \"great\":\n", "\n", "\n", "    great\n", "   /    \\\n", "  gr    eat\n", " / \\    /  \\\n", "g   r  e   at\n", "           / \\\n", "          a   t\n", "\n", "\n", "To scramble the string, we may choose any non-leaf node and swap its two children.\n", "\n", "\n", "For example, if we choose the node \"gr\" and swap its two children, it produces a scrambled string \"rgeat\".\n", "\n", "\n", "    rgeat\n", "   /    \\\n", "  rg    eat\n", " / \\    /  \\\n", "r   g  e   at\n", "           / \\\n", "          a   t\n", "\n", "\n", "We say that \"rgeat\" is a scrambled string of \"great\".\n", "\n", "\n", "Similarly, if we continue to swap the children of nodes \"eat\" and \"at\", it produces a scrambled string \"rgtae\".\n", "\n", "\n", "    rgtae\n", "   /    \\\n", "  rg    tae\n", " / \\    /  \\\n", "r   g  ta  e\n", "       / \\\n", "      t   a\n", "\n", "\n", "We say that \"rgtae\" is a scrambled string of \"great\".\n", "\n", "\n", "Given two strings s1 and s2 of the same length, determine if s2 is a scrambled string of s1.\n", "\n"], "filename": "87.scramble-string.py"}