{"text": ["[338] Counting Bits  \t(File: 338.counting-bits.py)\n", "\n", "https://leetcode.com/problems/counting-bits\n", "\n", "* Medium (60.99%)\n", "* Total Accepted:    NaN\n", "* Total Submissions: NaN\n", "* Testcase Example:  '2'\n", "\n", "Given a non negative integer number num. For every numbers i in the range 0 \u2264 i \u2264 num calculate the number of 1's in their binary representation and return them as an array.\n", "\n", "\n", "Example:\n", "For num = 5 you should return [0,1,1,2,1,2].\n", "\n", "\n", "Follow up:\n", "\n", "It is very easy to come up with a solution with run time O(n*sizeof(integer)). But can you do it in linear time O(n) /possibly in a single pass?\n", "Space complexity should be O(n).\n", "Can you do it like a boss? Do it without using any builtin function like __builtin_popcount  in c++ or in any other language.\n", "\n", "\n", "\n", "Credits:Special thanks to @ syedee  for adding this problem and creating all test cases.\n"], "filename": "338.counting-bits.py"}