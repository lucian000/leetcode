{
 "id": 179,
 "ids": "179",
 "state": "None",
 "name": "Largest Number",
 "key": "largest-number",
 "link": "https://leetcode.com/problems/largest-number",
 "locked": false,
 "percent": 22.442233364046476,
 "level": "Medium",
 "starred": false,
 "loaded": true,
 "totalAC": "75K",
 "totalSubmit": "334.3K",
 "desc": "Given a list of non negative integers, arrange them such that they form the largest number.\r\n\r\nFor example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.\r\n\r\nNote: The result may be very large, so you need to return a string instead of an integer.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    string largestNumber(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public String largestNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution:\r\n    # @param {integer[]} nums\r\n    # @return {string}\r\n    def largestNumber(self, nums):\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "char* largestNumber(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public string LargestNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {string}\r\n */\r\nvar largestNumber = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {String}\r\ndef largest_number(nums)\r\n    \r\nend"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func largestNumber(nums []int) string {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def largestNumber(nums: Array[Int]): String = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1]'",
 "testable": true,
 "slug": "largest-number",
 "category": "algorithms",
 "fname": "179.largest-number.algorithms.py",
 "test_your": {
  "code_answer": [
   "\"1\""
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "32 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1502699122.23_784204_51"
 },
 "test_expected": {
  "code_answer": [
   "\"1\""
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "45 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1502699122.26_784204_51"
 },
 "submit_chart": [
  [
   "35",
   "1.2959"
  ],
  [
   "36",
   "1.0799"
  ],
  [
   "38",
   "1.9438"
  ],
  [
   "39",
   "9.5032"
  ],
  [
   "42",
   "15.5508"
  ],
  [
   "43",
   "1.5119"
  ],
  [
   "45",
   "9.2873"
  ],
  [
   "46",
   "4.1037"
  ],
  [
   "48",
   "2.8078"
  ],
  [
   "49",
   "7.3434"
  ],
  [
   "52",
   "8.6393"
  ],
  [
   "55",
   "3.8877"
  ],
  [
   "56",
   "3.0238"
  ],
  [
   "58",
   "0.8639"
  ],
  [
   "59",
   "1.9438"
  ],
  [
   "62",
   "3.6717"
  ],
  [
   "63",
   "0.2160"
  ],
  [
   "65",
   "1.9438"
  ],
  [
   "66",
   "1.5119"
  ],
  [
   "68",
   "0.4320"
  ],
  [
   "69",
   "2.1598"
  ],
  [
   "72",
   "3.0238"
  ],
  [
   "75",
   "1.5119"
  ],
  [
   "76",
   "0.6479"
  ],
  [
   "78",
   "0.2160"
  ],
  [
   "79",
   "0.8639"
  ],
  [
   "82",
   "1.9438"
  ],
  [
   "85",
   "0.6479"
  ],
  [
   "86",
   "0.4320"
  ],
  [
   "89",
   "0.4320"
  ],
  [
   "92",
   "0.2160"
  ],
  [
   "99",
   "0.2160"
  ],
  [
   "102",
   "0.4320"
  ],
  [
   "109",
   "0.4320"
  ],
  [
   "112",
   "0.2160"
  ],
  [
   "118",
   "0.2160"
  ],
  [
   "119",
   "0.2160"
  ],
  [
   "125",
   "0.2160"
  ],
  [
   "132",
   "0.2160"
  ],
  [
   "135",
   "0.2160"
  ],
  [
   "139",
   "0.2160"
  ],
  [
   "145",
   "0.2160"
  ],
  [
   "162",
   "0.2160"
  ],
  [
   "165",
   "0.4320"
  ],
  [
   "168",
   "0.2160"
  ],
  [
   "176",
   "0.2160"
  ],
  [
   "185",
   "0.2160"
  ],
  [
   "199",
   "0.2160"
  ],
  [
   "205",
   "0.2160"
  ],
  [
   "212",
   "0.2160"
  ],
  [
   "232",
   "0.2160"
  ],
  [
   "235",
   "0.2160"
  ],
  [
   "269",
   "0.2160"
  ],
  [
   "295",
   "0.2160"
  ],
  [
   "352",
   "0.2160"
  ],
  [
   "445",
   "0.2160"
  ],
  [
   "469",
   "0.2160"
  ],
  [
   "475",
   "0.2160"
  ],
  [
   "489",
   "0.2160"
  ],
  [
   "506",
   "0.2160"
  ],
  [
   "529",
   "0.2160"
  ],
  [
   "666",
   "0.2160"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 221,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "46 ms",
  "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 221,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 179,
  "name": "Your",
  "id": 113818829
 }
}