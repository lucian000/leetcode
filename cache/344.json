{
 "id": 344,
 "ids": "344",
 "state": "None",
 "name": "Reverse String",
 "key": "reverse-string",
 "link": "https://leetcode.com/problems/reverse-string",
 "locked": false,
 "percent": 58.9991077371932,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "166.6K",
 "totalSubmit": "282.4K",
 "desc": "Write a function that takes a string as input and returns the string reversed.\r\n\r\n\r\nExample:\r\nGiven s = \"hello\", return \"olleh\".\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    string reverseString(string s) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public String reverseString(String s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def reverseString(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: str\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "char* reverseString(char* s) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public string ReverseString(string s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {string} s\r\n * @return {string}\r\n */\r\nvar reverseString = function(s) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} s\r\n# @return {String}\r\ndef reverse_string(s)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func reverseString(_ s: String) -> String {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func reverseString(s string) string {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def reverseString(s: String): String = {\n        \n    }\n}"
  }
 ],
 "testcase": "'\"hello\"'",
 "testable": true,
 "slug": "reverse-string",
 "category": "algorithms",
 "fname": "344.reverse-string.algorithms.py",
 "test_your": {
  "code_answer": [
   "\"olleh\""
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "29 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1502186044.92_784204_4"
 },
 "test_expected": {
  "code_answer": [
   "\"olleh\""
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "0 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1502186044.93_784204_4"
 },
 "submit_chart": [
  [
   "32",
   "0.1068"
  ],
  [
   "35",
   "2.8297"
  ],
  [
   "36",
   "1.5483"
  ],
  [
   "38",
   "4.3246"
  ],
  [
   "39",
   "8.9162"
  ],
  [
   "42",
   "16.2840"
  ],
  [
   "43",
   "0.2136"
  ],
  [
   "45",
   "7.9018"
  ],
  [
   "46",
   "4.6450"
  ],
  [
   "48",
   "3.4170"
  ],
  [
   "49",
   "6.8340"
  ],
  [
   "52",
   "7.4746"
  ],
  [
   "53",
   "0.0534"
  ],
  [
   "55",
   "4.5382"
  ],
  [
   "56",
   "2.2958"
  ],
  [
   "58",
   "1.9221"
  ],
  [
   "59",
   "4.2178"
  ],
  [
   "62",
   "5.1255"
  ],
  [
   "63",
   "0.1068"
  ],
  [
   "65",
   "1.9754"
  ],
  [
   "66",
   "1.2814"
  ],
  [
   "68",
   "0.7475"
  ],
  [
   "69",
   "1.6551"
  ],
  [
   "72",
   "2.5093"
  ],
  [
   "75",
   "1.0678"
  ],
  [
   "76",
   "0.3737"
  ],
  [
   "78",
   "0.2670"
  ],
  [
   "79",
   "1.0144"
  ],
  [
   "82",
   "0.6941"
  ],
  [
   "85",
   "0.4271"
  ],
  [
   "86",
   "0.0534"
  ],
  [
   "88",
   "0.0534"
  ],
  [
   "89",
   "0.4805"
  ],
  [
   "92",
   "0.3203"
  ],
  [
   "95",
   "0.2670"
  ],
  [
   "96",
   "0.1068"
  ],
  [
   "98",
   "0.1602"
  ],
  [
   "99",
   "0.1602"
  ],
  [
   "102",
   "0.2670"
  ],
  [
   "108",
   "0.0534"
  ],
  [
   "109",
   "0.1068"
  ],
  [
   "112",
   "0.1602"
  ],
  [
   "115",
   "0.1068"
  ],
  [
   "118",
   "0.0534"
  ],
  [
   "119",
   "0.0534"
  ],
  [
   "122",
   "0.1602"
  ],
  [
   "125",
   "0.2670"
  ],
  [
   "128",
   "0.1068"
  ],
  [
   "129",
   "0.1068"
  ],
  [
   "132",
   "0.3737"
  ],
  [
   "135",
   "0.1602"
  ],
  [
   "136",
   "0.1068"
  ],
  [
   "139",
   "0.1602"
  ],
  [
   "142",
   "0.1602"
  ],
  [
   "145",
   "0.1068"
  ],
  [
   "149",
   "0.1068"
  ],
  [
   "152",
   "0.0534"
  ],
  [
   "155",
   "0.1068"
  ],
  [
   "159",
   "0.0534"
  ],
  [
   "162",
   "0.0534"
  ],
  [
   "172",
   "0.0534"
  ],
  [
   "182",
   "0.0534"
  ],
  [
   "208",
   "0.0534"
  ],
  [
   "215",
   "0.0534"
  ],
  [
   "219",
   "0.1068"
  ],
  [
   "252",
   "0.0534"
  ],
  [
   "262",
   "0.0534"
  ],
  [
   "329",
   "0.0534"
  ],
  [
   "352",
   "0.0534"
  ],
  [
   "395",
   "0.0534"
  ],
  [
   "426",
   "0.0534"
  ],
  [
   "438",
   "0.0534"
  ],
  [
   "482",
   "0.0534"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 476,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "65 ms",
  "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 476,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 344,
  "name": "Your",
  "id": 113003166
 }
}