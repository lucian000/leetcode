{
 "id": 611,
 "ids": "611",
 "state": "None",
 "name": "Valid Triangle Number",
 "key": "valid-triangle-number",
 "link": "https://leetcode.com/problems/valid-triangle-number",
 "locked": false,
 "percent": 39.77338337182448,
 "level": "Medium",
 "starred": false,
 "loaded": true,
 "totalAC": "5.5K",
 "totalSubmit": "13.9K",
 "desc": "Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\r\n\r\nExample 1:\r\n\r\nInput: [2,2,3,4]\r\nOutput: 3\r\nExplanation:\r\nValid combinations are: \r\n2,3,4 (using the first 2)\r\n2,3,4 (using the second 2)\r\n2,2,3\r\n\r\n\r\n\r\nNote:\r\n\r\nThe length of the given array won't exceed 1000.\r\nThe integers in the given array are in the range of [0, 1000].\r\n\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int triangleNumber(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int triangleNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def triangleNumber(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "python3",
   "text": "Python3",
   "defaultCode": "class Solution:\r\n    def triangleNumber(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int triangleNumber(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int TriangleNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar triangleNumber = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef triangle_number(nums)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func triangleNumber(_ nums: [Int]) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func triangleNumber(nums []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def triangleNumber(nums: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[2,2,3,4]'",
 "testable": true,
 "slug": "valid-triangle-number",
 "category": "algorithms",
 "fname": "611.valid-triangle-number.algorithms.py"
}