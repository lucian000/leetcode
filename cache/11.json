{
 "id": 11,
 "ids": "11",
 "state": "None",
 "name": "Container With Most Water",
 "key": "container-with-most-water",
 "link": "https://leetcode.com/problems/container-with-most-water",
 "locked": false,
 "percent": 36.47462460455376,
 "level": "Medium",
 "starred": false,
 "loaded": true,
 "totalAC": "139.2K",
 "totalSubmit": "381.5K",
 "desc": "Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n\r\nNote: You may not slant the container and n is at least 2.\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int maxArea(vector<int>& height) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int maxArea(int[] height) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def maxArea(self, height):\r\n        \"\"\"\r\n        :type height: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int maxArea(int* height, int heightSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int MaxArea(int[] height) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} height\r\n * @return {number}\r\n */\r\nvar maxArea = function(height) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} height\r\n# @return {Integer}\r\ndef max_area(height)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func maxArea(_ height: [Int]) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func maxArea(height []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def maxArea(height: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1,1]'",
 "testable": true,
 "slug": "container-with-most-water",
 "category": "algorithms",
 "fname": "11.container-with-most-water.algorithms.py"
}