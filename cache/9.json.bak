{"id": 9, "ids": "9", "state": "None", "name": "Palindrome Number", "key": "palindrome-number", "link": "https://leetcode.com/problems/palindrome-number", "locked": false, "percent": 35.14552798396955, "level": "Easy", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "Determine whether an integer is a palindrome. Do this without extra space.\r\n\r\nclick to show spoilers.\r\n\r\nSome hints:\r\n\r\nCould negative integers be palindromes? (ie, -1)\r\n\r\nIf you are thinking of converting the integer to string, note the restriction of using extra space.\r\n\r\nYou could also try reversing an integer. However, if you have solved the problem \"Reverse Integer\", you know that the reversed integer might overflow. How would you handle such case?\r\n\r\nThere is a more generic way of solving this problem.\r\n\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    bool isPalindrome(int x) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public boolean isPalindrome(int x) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def isPalindrome(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "bool isPalindrome(int x) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public bool IsPalindrome(int x) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number} x\r\n * @return {boolean}\r\n */\r\nvar isPalindrome = function(x) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer} x\r\n# @return {Boolean}\r\ndef is_palindrome(x)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\r\n    func isPalindrome(_ x: Int) -> Bool {\r\n        \r\n    }\r\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func isPalindrome(x int) bool {\r\n    \r\n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def isPalindrome(x: Int): Boolean = {\n        \n    }\n}"}], "testcase": "'-2147483648'", "testable": true}