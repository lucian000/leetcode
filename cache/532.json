{
 "id": 532,
 "ids": "532",
 "state": "None",
 "name": "K-diff Pairs in an Array",
 "key": "k-diff-pairs-in-an-array",
 "link": "https://leetcode.com/problems/k-diff-pairs-in-an-array",
 "locked": false,
 "percent": 28.208431965960507,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "18.8K",
 "totalSubmit": "66.8K",
 "desc": "\r\nGiven an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [3, 1, 4, 1, 5], k = 2\r\nOutput: 2\r\nExplanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).Although we have two 1s in the input, we should only return the number of unique pairs.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:[1, 2, 3, 4, 5], k = 1\r\nOutput: 4\r\nExplanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [1, 3, 1, 5, 4], k = 0\r\nOutput: 1\r\nExplanation: There is one 0-diff pair in the array, (1, 1).\r\n\r\n\r\n\r\nNote:\r\n\r\nThe pairs (i, j) and (j, i) count as the same pair.\r\nThe length of the array won't exceed 10,000.\r\nAll the integers in the given input belong to the range: [-1e7, 1e7].\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int findPairs(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int findPairs(int[] nums, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def findPairs(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int findPairs(int* nums, int numsSize, int k) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int FindPairs(int[] nums, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {number}\r\n */\r\nvar findPairs = function(nums, k) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef find_pairs(nums, k)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func findPairs(_ nums: [Int], _ k: Int) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func findPairs(nums []int, k int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def findPairs(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[3,1,4,1,5]\\n2'",
 "testable": true,
 "slug": "k-diff-pairs-in-an-array",
 "category": "algorithms",
 "fname": "532.k-diff-pairs-in-an-array.algorithms.py",
 "test_your": {
  "code_answer": [
   "2"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "32 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1502535065.83_784204_3"
 },
 "test_expected": {
  "code_answer": [
   "2"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "29 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1502535065.85_784204_3"
 },
 "submit_chart": [
  [
   "45",
   "1.0152"
  ],
  [
   "46",
   "0.3807"
  ],
  [
   "48",
   "0.3807"
  ],
  [
   "49",
   "3.1726"
  ],
  [
   "52",
   "7.9949"
  ],
  [
   "53",
   "0.2538"
  ],
  [
   "55",
   "3.8071"
  ],
  [
   "56",
   "3.0457"
  ],
  [
   "58",
   "2.9188"
  ],
  [
   "59",
   "4.8223"
  ],
  [
   "62",
   "7.7411"
  ],
  [
   "65",
   "2.7919"
  ],
  [
   "66",
   "1.7766"
  ],
  [
   "68",
   "1.3959"
  ],
  [
   "69",
   "3.2995"
  ],
  [
   "72",
   "3.0457"
  ],
  [
   "75",
   "3.6802"
  ],
  [
   "76",
   "0.8883"
  ],
  [
   "78",
   "0.7614"
  ],
  [
   "79",
   "3.0457"
  ],
  [
   "82",
   "2.7919"
  ],
  [
   "83",
   "0.1269"
  ],
  [
   "85",
   "3.8071"
  ],
  [
   "86",
   "1.2690"
  ],
  [
   "88",
   "1.6497"
  ],
  [
   "89",
   "2.6650"
  ],
  [
   "92",
   "3.0457"
  ],
  [
   "95",
   "1.1421"
  ],
  [
   "96",
   "0.8883"
  ],
  [
   "98",
   "0.5076"
  ],
  [
   "99",
   "1.7766"
  ],
  [
   "102",
   "2.2843"
  ],
  [
   "105",
   "1.9036"
  ],
  [
   "106",
   "0.7614"
  ],
  [
   "108",
   "0.6345"
  ],
  [
   "109",
   "0.7614"
  ],
  [
   "112",
   "1.3959"
  ],
  [
   "115",
   "0.5076"
  ],
  [
   "116",
   "0.5076"
  ],
  [
   "118",
   "0.3807"
  ],
  [
   "119",
   "0.6345"
  ],
  [
   "122",
   "0.8883"
  ],
  [
   "125",
   "0.2538"
  ],
  [
   "126",
   "0.2538"
  ],
  [
   "128",
   "0.1269"
  ],
  [
   "129",
   "0.5076"
  ],
  [
   "132",
   "0.3807"
  ],
  [
   "135",
   "0.2538"
  ],
  [
   "136",
   "0.3807"
  ],
  [
   "138",
   "0.1269"
  ],
  [
   "139",
   "0.3807"
  ],
  [
   "142",
   "0.2538"
  ],
  [
   "152",
   "0.2538"
  ],
  [
   "155",
   "0.3807"
  ],
  [
   "158",
   "0.1269"
  ],
  [
   "159",
   "0.2538"
  ],
  [
   "162",
   "0.1269"
  ],
  [
   "165",
   "0.1269"
  ],
  [
   "169",
   "0.2538"
  ],
  [
   "175",
   "0.2538"
  ],
  [
   "179",
   "0.1269"
  ],
  [
   "186",
   "0.1269"
  ],
  [
   "192",
   "0.2538"
  ],
  [
   "199",
   "0.1269"
  ],
  [
   "212",
   "0.1269"
  ],
  [
   "219",
   "0.2538"
  ],
  [
   "222",
   "0.1269"
  ],
  [
   "229",
   "0.1269"
  ],
  [
   "232",
   "0.1269"
  ],
  [
   "235",
   "0.1269"
  ],
  [
   "238",
   "0.1269"
  ],
  [
   "239",
   "0.2538"
  ],
  [
   "245",
   "0.2538"
  ],
  [
   "246",
   "0.3807"
  ],
  [
   "252",
   "0.5076"
  ],
  [
   "258",
   "0.1269"
  ],
  [
   "259",
   "0.1269"
  ],
  [
   "262",
   "0.1269"
  ],
  [
   "268",
   "0.1269"
  ],
  [
   "272",
   "0.1269"
  ],
  [
   "275",
   "0.1269"
  ],
  [
   "279",
   "0.1269"
  ],
  [
   "288",
   "0.1269"
  ],
  [
   "292",
   "0.1269"
  ],
  [
   "295",
   "0.1269"
  ],
  [
   "296",
   "0.1269"
  ],
  [
   "302",
   "0.1269"
  ],
  [
   "305",
   "0.1269"
  ],
  [
   "306",
   "0.1269"
  ],
  [
   "318",
   "0.1269"
  ],
  [
   "356",
   "0.1269"
  ],
  [
   "358",
   "0.1269"
  ],
  [
   "365",
   "0.1269"
  ],
  [
   "372",
   "0.1269"
  ],
  [
   "396",
   "0.1269"
  ],
  [
   "405",
   "0.1269"
  ],
  [
   "406",
   "0.1269"
  ],
  [
   "418",
   "0.1269"
  ],
  [
   "425",
   "0.1269"
  ],
  [
   "442",
   "0.1269"
  ],
  [
   "449",
   "0.1269"
  ],
  [
   "452",
   "0.2538"
  ],
  [
   "458",
   "0.1269"
  ],
  [
   "478",
   "0.1269"
  ],
  [
   "489",
   "0.1269"
  ],
  [
   "496",
   "0.1269"
  ],
  [
   "499",
   "0.1269"
  ],
  [
   "515",
   "0.1269"
  ],
  [
   "655",
   "0.1269"
  ],
  [
   "662",
   "0.1269"
  ],
  [
   "682",
   "0.1269"
  ],
  [
   "1039",
   "0.1269"
  ],
  [
   "1302",
   "0.1269"
  ],
  [
   "1319",
   "0.1269"
  ],
  [
   "1422",
   "0.1269"
  ],
  [
   "1635",
   "0.1269"
  ],
  [
   "1646",
   "0.1269"
  ],
  [
   "1682",
   "0.1269"
  ],
  [
   "1772",
   "0.1269"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 72,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "46 ms",
  "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 72,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 532,
  "name": "Your",
  "id": 113554400
 }
}