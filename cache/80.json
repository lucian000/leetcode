{"id": 80, "ids": "80", "state": "None", "name": "Remove Duplicates from Sorted Array II", "key": "remove-duplicates-from-sorted-array-ii", "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii", "locked": false, "percent": 35.81228131350175, "level": "Medium", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "\r\nFollow up for \"Remove Duplicates\":\r\nWhat if duplicates are allowed at most twice?\r\n\r\n\r\nFor example,\r\nGiven sorted array nums = [1,1,1,2,2,3],\r\n\r\n\r\nYour function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    int removeDuplicates(vector<int>& nums) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int removeDuplicates(int[] nums) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def removeDuplicates(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "int removeDuplicates(int* nums, int numsSize) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int RemoveDuplicates(int[] nums) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar removeDuplicates = function(nums) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef remove_duplicates(nums)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\n    func removeDuplicates(_ nums: inout [Int]) -> Int {\n        \n    }\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func removeDuplicates(nums []int) int {\r\n    \r\n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def removeDuplicates(nums: Array[Int]): Int = {\n        \n    }\n}"}], "testcase": "[]", "testable": true}