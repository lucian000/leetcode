{"id": 532, "ids": "532", "state": "None", "name": "K-diff Pairs in an Array", "key": "k-diff-pairs-in-an-array", "link": "https://leetcode.com/problems/k-diff-pairs-in-an-array", "locked": false, "percent": 28.120873383901973, "level": "Easy", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "\r\nGiven an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.\r\n\r\n\r\n\r\nExample 1:\r\n\r\nInput: [3, 1, 4, 1, 5], k = 2\r\nOutput: 2\r\nExplanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).Although we have two 1s in the input, we should only return the number of unique pairs.\r\n\r\n\r\n\r\nExample 2:\r\n\r\nInput:[1, 2, 3, 4, 5], k = 1\r\nOutput: 4\r\nExplanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\r\n\r\n\r\n\r\nExample 3:\r\n\r\nInput: [1, 3, 1, 5, 4], k = 0\r\nOutput: 1\r\nExplanation: There is one 0-diff pair in the array, (1, 1).\r\n\r\n\r\n\r\nNote:\r\n\r\nThe pairs (i, j) and (j, i) count as the same pair.\r\nThe length of the array won't exceed 10,000.\r\nAll the integers in the given input belong to the range: [-1e7, 1e7].\r\n\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    int findPairs(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int findPairs(int[] nums, int k) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def findPairs(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "int findPairs(int* nums, int numsSize, int k) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int FindPairs(int[] nums, int k) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {number}\r\n */\r\nvar findPairs = function(nums, k) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef find_pairs(nums, k)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\r\n    func findPairs(_ nums: [Int], _ k: Int) -> Int {\r\n        \r\n    }\r\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func findPairs(nums []int, k int) int {\r\n    \r\n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def findPairs(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"}], "testcase": "'[3,1,4,1,5]\\n2'", "testable": true}