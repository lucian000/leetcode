{
 "id": 202,
 "ids": "202",
 "state": "None",
 "name": "Happy Number",
 "key": "happy-number",
 "link": "https://leetcode.com/problems/happy-number",
 "locked": false,
 "percent": 40.46431001522859,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "",
 "totalSubmit": "",
 "desc": "Write an algorithm to determine if a number is \"happy\".\r\n\r\nA happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.\r\n\r\nExample:\u00a019 is a happy number\r\n\r\n\r\n12 + 92 = 82\r\n82 + 22 = 68\r\n62 + 82 = 100\r\n12 + 02 + 02 = 1\r\n\r\n\r\nCredits:Special thanks to @mithmatt and @ts for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    bool isHappy(int n) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public boolean isHappy(int n) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def isHappy(self, n):\r\n        \"\"\"\r\n        :type n: int\r\n        :rtype: bool\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "bool isHappy(int n) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public bool IsHappy(int n) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number} n\r\n * @return {boolean}\r\n */\r\nvar isHappy = function(n) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer} n\r\n# @return {Boolean}\r\ndef is_happy(n)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func isHappy(_ n: Int) -> Bool {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func isHappy(n int) bool {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def isHappy(n: Int): Boolean = {\n        \n    }\n}"
  }
 ],
 "testcase": "'1'",
 "testable": true
}