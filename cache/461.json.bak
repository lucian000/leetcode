{
 "id": 461,
 "ids": "461",
 "state": "None",
 "name": "Hamming Distance",
 "key": "hamming-distance",
 "link": "https://leetcode.com/problems/hamming-distance",
 "locked": false,
 "percent": 70.30234040615609,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "77.2K",
 "totalSubmit": "109.8K",
 "desc": "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\r\n\r\nGiven two integers x and y, calculate the Hamming distance.\r\n\r\nNote:\r\n0 \u2264 x, y < 231.\r\n\r\n\r\nExample:\r\n\r\nInput: x = 1, y = 4\r\n\r\nOutput: 2\r\n\r\nExplanation:\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       ?   ?\r\n\r\nThe above arrows point to positions where the corresponding bits are different.\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int hammingDistance(int x, int y) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int hammingDistance(int x, int y) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def hammingDistance(self, x, y):\r\n        \"\"\"\r\n        :type x: int\r\n        :type y: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int hammingDistance(int x, int y) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int HammingDistance(int x, int y) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {number}\r\n */\r\nvar hammingDistance = function(x, y) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer} x\r\n# @param {Integer} y\r\n# @return {Integer}\r\ndef hamming_distance(x, y)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func hammingDistance(_ x: Int, _ y: Int) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func hammingDistance(x int, y int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def hammingDistance(x: Int, y: Int): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'1\\n4'",
 "testable": true,
 "slug": "hamming-distance",
 "category": "algorithms",
 "fname": "461.hamming-distance.algorithms.py",
 "test_your": {
  "code_answer": [
   "2"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "36 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1501753432.98_784204_15"
 },
 "test_expected": {
  "code_answer": [
   "2"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "32 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1501753433.0_784204_15"
 },
 "submit_chart": [
  [
   "28",
   "0.1178"
  ],
  [
   "29",
   "0.9815"
  ],
  [
   "32",
   "13.1920"
  ],
  [
   "33",
   "1.1779"
  ],
  [
   "35",
   "13.4276"
  ],
  [
   "36",
   "9.1088"
  ],
  [
   "38",
   "5.8893"
  ],
  [
   "39",
   "12.8779"
  ],
  [
   "42",
   "12.6816"
  ],
  [
   "43",
   "0.5889"
  ],
  [
   "45",
   "5.9678"
  ],
  [
   "46",
   "3.1802"
  ],
  [
   "48",
   "2.3165"
  ],
  [
   "49",
   "3.8477"
  ],
  [
   "52",
   "4.0832"
  ],
  [
   "55",
   "2.1594"
  ],
  [
   "56",
   "0.9423"
  ],
  [
   "58",
   "0.8638"
  ],
  [
   "59",
   "1.2956"
  ],
  [
   "62",
   "1.4920"
  ],
  [
   "65",
   "0.7067"
  ],
  [
   "66",
   "0.1963"
  ],
  [
   "68",
   "0.2748"
  ],
  [
   "69",
   "0.5497"
  ],
  [
   "72",
   "0.5497"
  ],
  [
   "75",
   "0.1963"
  ],
  [
   "76",
   "0.0785"
  ],
  [
   "78",
   "0.0393"
  ],
  [
   "79",
   "0.1178"
  ],
  [
   "82",
   "0.1178"
  ],
  [
   "85",
   "0.0393"
  ],
  [
   "86",
   "0.1570"
  ],
  [
   "95",
   "0.0393"
  ],
  [
   "96",
   "0.0393"
  ],
  [
   "98",
   "0.0393"
  ],
  [
   "99",
   "0.0785"
  ],
  [
   "102",
   "0.0393"
  ],
  [
   "105",
   "0.1178"
  ],
  [
   "106",
   "0.0393"
  ],
  [
   "109",
   "0.0393"
  ],
  [
   "116",
   "0.0393"
  ],
  [
   "118",
   "0.0785"
  ],
  [
   "122",
   "0.0393"
  ],
  [
   "138",
   "0.0393"
  ],
  [
   "145",
   "0.0393"
  ],
  [
   "219",
   "0.0393"
  ],
  [
   "255",
   "0.0393"
  ],
  [
   "316",
   "0.0393"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 149,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "32 ms",
  "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 149,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 461,
  "name": "Your",
  "id": 112323105
 }
}