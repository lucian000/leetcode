{
 "id": 203,
 "ids": "203",
 "state": "None",
 "name": "Remove Linked List Elements",
 "key": "remove-linked-list-elements",
 "link": "https://leetcode.com/problems/remove-linked-list-elements",
 "locked": false,
 "percent": 32.22949546652667,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "117.9K",
 "totalSubmit": "365.7K",
 "desc": "Remove all elements from a linked list of integers that have value val.\r\n\r\nExample\r\nGiven: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6,  val = 6\r\nReturn: 1 --> 2 --> 3 --> 4 --> 5\r\n\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     ListNode *next;\r\n *     ListNode(int x) : val(x), next(NULL) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    ListNode* removeElements(ListNode* head, int val) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode removeElements(ListNode head, int val) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "# Definition for singly-linked list.\r\n# class ListNode(object):\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.next = None\r\n\r\nclass Solution(object):\r\n    def removeElements(self, head, val):\r\n        \"\"\"\r\n        :type head: ListNode\r\n        :type val: int\r\n        :rtype: ListNode\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * struct ListNode {\r\n *     int val;\r\n *     struct ListNode *next;\r\n * };\r\n */\r\nstruct ListNode* removeElements(struct ListNode* head, int val) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public int val;\r\n *     public ListNode next;\r\n *     public ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode RemoveElements(ListNode head, int val) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} head\r\n * @param {number} val\r\n * @return {ListNode}\r\n */\r\nvar removeElements = function(head, val) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# Definition for singly-linked list.\r\n# class ListNode\r\n#     attr_accessor :val, :next\r\n#     def initialize(val)\r\n#         @val = val\r\n#         @next = nil\r\n#     end\r\n# end\r\n\r\n# @param {ListNode} head\r\n# @param {Integer} val\r\n# @return {ListNode}\r\ndef remove_elements(head, val)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     public var val: Int\r\n *     public var next: ListNode?\r\n *     public init(_ val: Int) {\r\n *         self.val = val\r\n *         self.next = nil\r\n *     }\r\n * }\r\n */\r\nclass Solution {\r\n    func removeElements(_ head: ListNode?, _ val: Int) -> ListNode? {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "/**\r\n * Definition for singly-linked list.\r\n * type ListNode struct {\r\n *     Val int\r\n *     Next *ListNode\r\n * }\r\n */\r\nfunc removeElements(head *ListNode, val int) *ListNode {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "/**\n * Definition for singly-linked list.\n * class ListNode(var _x: Int = 0) {\n *   var next: ListNode = null\n *   var x: Int = _x\n * }\n */\nobject Solution {\n    def removeElements(head: ListNode, val: Int): ListNode = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1,2,6,3,4,5,6]\\n6'",
 "testable": true,
 "slug": "remove-linked-list-elements",
 "category": "algorithms",
 "fname": "203.remove-linked-list-elements.algorithms.py",
 "test_your": {
  "code_answer": [
   "[1,2,3,4,5]"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "35 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1501824492.22_784204_27"
 },
 "test_expected": {
  "code_answer": [
   "[1,2,3,4,5]"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "33 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1501824492.24_784204_27"
 },
 "submit_chart": [
  [
   "92",
   "0.3341"
  ],
  [
   "95",
   "0.3341"
  ],
  [
   "96",
   "0.3341"
  ],
  [
   "98",
   "0.7795"
  ],
  [
   "99",
   "1.8931"
  ],
  [
   "102",
   "6.9042"
  ],
  [
   "105",
   "5.3452"
  ],
  [
   "106",
   "2.5612"
  ],
  [
   "108",
   "3.4521"
  ],
  [
   "109",
   "7.3497"
  ],
  [
   "112",
   "8.9087"
  ],
  [
   "113",
   "0.2227"
  ],
  [
   "115",
   "7.0156"
  ],
  [
   "116",
   "3.4521"
  ],
  [
   "118",
   "3.5635"
  ],
  [
   "119",
   "5.5679"
  ],
  [
   "122",
   "5.9020"
  ],
  [
   "125",
   "3.8976"
  ],
  [
   "126",
   "1.8931"
  ],
  [
   "128",
   "1.2249"
  ],
  [
   "129",
   "2.7840"
  ],
  [
   "132",
   "3.1180"
  ],
  [
   "135",
   "2.4499"
  ],
  [
   "136",
   "1.2249"
  ],
  [
   "138",
   "0.5568"
  ],
  [
   "139",
   "1.4477"
  ],
  [
   "142",
   "2.3385"
  ],
  [
   "145",
   "1.4477"
  ],
  [
   "146",
   "0.6682"
  ],
  [
   "148",
   "0.5568"
  ],
  [
   "149",
   "1.2249"
  ],
  [
   "152",
   "0.6682"
  ],
  [
   "155",
   "0.8909"
  ],
  [
   "156",
   "0.2227"
  ],
  [
   "158",
   "0.3341"
  ],
  [
   "159",
   "0.5568"
  ],
  [
   "162",
   "1.0022"
  ],
  [
   "165",
   "0.4454"
  ],
  [
   "166",
   "0.4454"
  ],
  [
   "168",
   "0.4454"
  ],
  [
   "169",
   "0.3341"
  ],
  [
   "172",
   "0.5568"
  ],
  [
   "175",
   "0.3341"
  ],
  [
   "178",
   "0.3341"
  ],
  [
   "179",
   "0.5568"
  ],
  [
   "182",
   "0.2227"
  ],
  [
   "185",
   "0.1114"
  ],
  [
   "186",
   "0.2227"
  ],
  [
   "188",
   "0.2227"
  ],
  [
   "189",
   "0.1114"
  ],
  [
   "192",
   "0.4454"
  ],
  [
   "193",
   "0.1114"
  ],
  [
   "195",
   "0.4454"
  ],
  [
   "202",
   "0.4454"
  ],
  [
   "205",
   "0.1114"
  ],
  [
   "206",
   "0.1114"
  ],
  [
   "208",
   "0.1114"
  ],
  [
   "209",
   "0.1114"
  ],
  [
   "212",
   "0.3341"
  ],
  [
   "216",
   "0.1114"
  ],
  [
   "229",
   "0.1114"
  ],
  [
   "232",
   "0.1114"
  ],
  [
   "236",
   "0.1114"
  ],
  [
   "255",
   "0.1114"
  ],
  [
   "265",
   "0.1114"
  ],
  [
   "312",
   "0.1114"
  ],
  [
   "345",
   "0.1114"
  ],
  [
   "448",
   "0.1114"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 65,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "132 ms",
  "compare_result": "11111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 65,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 203,
  "name": "Your",
  "id": 112440418
 }
}