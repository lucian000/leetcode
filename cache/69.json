{
 "id": 69,
 "ids": "69",
 "state": "ac",
 "name": "Sqrt(x)",
 "key": "sqrtx",
 "link": "https://leetcode.com/problems/sqrtx",
 "locked": false,
 "percent": 27.71953750164831,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "",
 "totalSubmit": "",
 "desc": "Implement int sqrt(int x).\r\n\r\nCompute and return the square root of x.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int mySqrt(int x) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int mySqrt(int x) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def mySqrt(self, x):\r\n        \"\"\"\r\n        :type x: int\r\n        :rtype: int\r\n        \"\"\""
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int mySqrt(int x) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int MySqrt(int x) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number} x\r\n * @return {number}\r\n */\r\nvar mySqrt = function(x) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer} x\r\n# @return {Integer}\r\ndef my_sqrt(x)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func mySqrt(_ x: Int) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func mySqrt(x int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def mySqrt(x: Int): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'0'",
 "testable": true,
 "fname": "69.sqrtx.py",
 "submit_chart": [
  [
   "32",
   "0.0697"
  ],
  [
   "35",
   "0.6276"
  ],
  [
   "36",
   "0.2789"
  ],
  [
   "38",
   "0.7671"
  ],
  [
   "39",
   "2.1618"
  ],
  [
   "42",
   "9.6234"
  ],
  [
   "43",
   "0.4184"
  ],
  [
   "45",
   "9.2050"
  ],
  [
   "46",
   "5.0209"
  ],
  [
   "48",
   "5.0907"
  ],
  [
   "49",
   "9.6234"
  ],
  [
   "52",
   "11.5063"
  ],
  [
   "53",
   "0.1395"
  ],
  [
   "55",
   "6.3459"
  ],
  [
   "56",
   "4.0446"
  ],
  [
   "58",
   "1.8828"
  ],
  [
   "59",
   "5.4393"
  ],
  [
   "62",
   "6.3459"
  ],
  [
   "65",
   "2.6499"
  ],
  [
   "66",
   "1.6736"
  ],
  [
   "68",
   "1.0460"
  ],
  [
   "69",
   "2.0921"
  ],
  [
   "72",
   "1.9526"
  ],
  [
   "75",
   "1.6039"
  ],
  [
   "76",
   "0.6276"
  ],
  [
   "78",
   "0.5579"
  ],
  [
   "79",
   "1.3947"
  ],
  [
   "82",
   "1.8131"
  ],
  [
   "85",
   "0.4184"
  ],
  [
   "86",
   "0.5579"
  ],
  [
   "88",
   "0.3487"
  ],
  [
   "89",
   "0.5579"
  ],
  [
   "92",
   "0.6276"
  ],
  [
   "95",
   "0.0697"
  ],
  [
   "96",
   "0.2092"
  ],
  [
   "98",
   "0.0697"
  ],
  [
   "99",
   "0.1395"
  ],
  [
   "102",
   "0.2789"
  ],
  [
   "109",
   "0.2092"
  ],
  [
   "112",
   "0.1395"
  ],
  [
   "115",
   "0.0697"
  ],
  [
   "116",
   "0.0697"
  ],
  [
   "119",
   "0.0697"
  ],
  [
   "122",
   "0.0697"
  ],
  [
   "125",
   "0.0697"
  ],
  [
   "136",
   "0.0697"
  ],
  [
   "139",
   "0.0697"
  ],
  [
   "142",
   "0.2092"
  ],
  [
   "149",
   "0.0697"
  ],
  [
   "155",
   "0.0697"
  ],
  [
   "156",
   "0.0697"
  ],
  [
   "158",
   "0.0697"
  ],
  [
   "168",
   "0.0697"
  ],
  [
   "188",
   "0.0697"
  ],
  [
   "196",
   "0.0697"
  ],
  [
   "205",
   "0.0697"
  ],
  [
   "232",
   "0.0697"
  ],
  [
   "238",
   "0.1395"
  ],
  [
   "265",
   "0.0697"
  ],
  [
   "272",
   "0.0697"
  ],
  [
   "279",
   "0.0697"
  ],
  [
   "295",
   "0.0697"
  ],
  [
   "306",
   "0.0697"
  ],
  [
   "332",
   "0.0697"
  ],
  [
   "432",
   "0.0697"
  ],
  [
   "612",
   "0.0697"
  ],
  [
   "645",
   "0.0697"
  ],
  [
   "665",
   "0.0697"
  ],
  [
   "679",
   "0.0697"
  ],
  [
   "769",
   "0.0697"
  ],
  [
   "772",
   "0.0697"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 1017,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "39 ms",
  "compare_result
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 1017,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 69,
  "name": "Your",
  "id": 110493828
 }
}