{"id": 384, "ids": "384", "state": "None", "name": "Shuffle an Array", "key": "shuffle-an-array", "link": "https://leetcode.com/problems/shuffle-an-array", "locked": false, "percent": 46.293139437795716, "level": "Medium", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "Shuffle a set of numbers without duplicates.\r\n\r\n\r\nExample:\r\n\r\n// Init an array with set 1, 2, and 3.\r\nint[] nums = {1,2,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\r\nsolution.shuffle();\r\n\r\n// Resets the array back to its original configuration [1,2,3].\r\nsolution.reset();\r\n\r\n// Returns the random shuffling of array [1,2,3].\r\nsolution.shuffle();\r\n\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    Solution(vector<int> nums) {\r\n        \r\n    }\r\n    \r\n    /** Resets the array to its original configuration and return it. */\r\n    vector<int> reset() {\r\n        \r\n    }\r\n    \r\n    /** Returns a random shuffling of the array. */\r\n    vector<int> shuffle() {\r\n        \r\n    }\r\n};\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(nums);\r\n * vector<int> param_1 = obj.reset();\r\n * vector<int> param_2 = obj.shuffle();\r\n */"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n\r\n    public Solution(int[] nums) {\r\n        \r\n    }\r\n    \r\n    /** Resets the array to its original configuration and return it. */\r\n    public int[] reset() {\r\n        \r\n    }\r\n    \r\n    /** Returns a random shuffling of the array. */\r\n    public int[] shuffle() {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(nums);\r\n * int[] param_1 = obj.reset();\r\n * int[] param_2 = obj.shuffle();\r\n */"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n\r\n    def __init__(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        \"\"\"\r\n        \r\n\r\n    def reset(self):\r\n        \"\"\"\r\n        Resets the array to its original configuration and return it.\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        \r\n\r\n    def shuffle(self):\r\n        \"\"\"\r\n        Returns a random shuffling of the array.\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        \r\n\r\n\r\n# Your Solution object will be instantiated and called as such:\r\n# obj = Solution(nums)\r\n# param_1 = obj.reset()\r\n# param_2 = obj.shuffle()"}, {"value": "c", "text": "C", "defaultCode": "typedef struct {\r\n    \r\n} Solution;\r\n\r\nSolution* solutionCreate(int* nums, int size) {\r\n    \r\n}\r\n\r\n/** Resets the array to its original configuration and return it. */\r\nint* solutionReset(Solution* obj, int *returnSize) {\r\n    \r\n}\r\n\r\n/** Returns a random shuffling of the array. */\r\nint* solutionShuffle(Solution* obj, int *returnSize) {\r\n    \r\n}\r\n\r\nvoid solutionFree(Solution* obj) {\r\n    \r\n}\r\n\r\n/**\r\n * Your Solution struct will be instantiated and called as such:\r\n * struct Solution* obj = solutionCreate(nums, size);\r\n * int* param_1 = solutionReset(obj);\r\n * int* param_2 = solutionShuffle(obj);\r\n * solutionFree(obj);\r\n */"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n\r\n    public Solution(int[] nums) {\r\n        \r\n    }\r\n    \r\n    /** Resets the array to its original configuration and return it. */\r\n    public int[] Reset() {\r\n        \r\n    }\r\n    \r\n    /** Returns a random shuffling of the array. */\r\n    public int[] Shuffle() {\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * Solution obj = new Solution(nums);\r\n * int[] param_1 = obj.Reset();\r\n * int[] param_2 = obj.Shuffle();\r\n */"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[]} nums\r\n */\r\nvar Solution = function(nums) {\r\n    \r\n};\r\n\r\n/**\r\n * Resets the array to its original configuration and return it.\r\n * @return {number[]}\r\n */\r\nSolution.prototype.reset = function() {\r\n    \r\n};\r\n\r\n/**\r\n * Returns a random shuffling of the array.\r\n * @return {number[]}\r\n */\r\nSolution.prototype.shuffle = function() {\r\n    \r\n};\r\n\r\n/** \r\n * Your Solution object will be instantiated and called as such:\r\n * var obj = Object.create(Solution).createNew(nums)\r\n * var param_1 = obj.reset()\r\n * var param_2 = obj.shuffle()\r\n */"}, {"value": "ruby", "text": "Ruby", "defaultCode": "class Solution\r\n\r\n=begin\r\n    :type nums: Integer[]\r\n=end\r\n    def initialize(nums)\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    Resets the array to its original configuration and return it.\r\n    :rtype: Integer[]\r\n=end\r\n    def reset()\r\n        \r\n    end\r\n\r\n\r\n=begin\r\n    Returns a random shuffling of the array.\r\n    :rtype: Integer[]\r\n=end\r\n    def shuffle()\r\n        \r\n    end\r\n\r\n\r\nend\r\n\r\n# Your Solution object will be instantiated and called as such:\r\n# obj = Solution.new(nums)\r\n# param_1 = obj.reset()\r\n# param_2 = obj.shuffle()"}, {"value": "golang", "text": "Go", "defaultCode": "type Solution struct {\r\n    \r\n}\r\n\r\n\r\nfunc Constructor(nums []int) Solution {\r\n    \r\n}\r\n\r\n\r\n/** Resets the array to its original configuration and return it. */\r\nfunc (this *Solution) Reset() []int {\r\n    \r\n}\r\n\r\n\r\n/** Returns a random shuffling of the array. */\r\nfunc (this *Solution) Shuffle() []int {\r\n    \r\n}\r\n\r\n\r\n/**\r\n * Your Solution object will be instantiated and called as such:\r\n * obj := Constructor(nums);\r\n * param_1 := obj.Reset();\r\n * param_2 := obj.Shuffle();\r\n */"}, {"value": "scala", "text": "Scala", "defaultCode": "class Solution(var _nums: Array[Int]) {\n    \n    /** Resets the array to its original configuration and return it. */\n    def reset() : Array[Int] = {\n\n    }\n    \n    /** Returns a random shuffling of the array. */\n    def shuffle() : Array[Int] = {\n\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums);\n * Array[Int] param_1 = obj.reset();\n * Array[Int] param_2 = obj.shuffle();\n */"}], "testcase": "[\"Solution\",\"shuffle\",\"reset\",\"shuffle\"]\n[[[1,2,3]],[],[],[]]", "testable": true}