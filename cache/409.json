{
 "id": 409,
 "ids": "409",
 "state": "None",
 "name": "Longest Palindrome",
 "key": "longest-palindrome",
 "link": "https://leetcode.com/problems/longest-palindrome",
 "locked": false,
 "percent": 45.30379173383061,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "43K",
 "totalSubmit": "94.9K",
 "desc": "Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.\r\n\r\nThis is case sensitive, for example \"Aa\" is not considered a palindrome here.\r\n\r\nNote:\r\nAssume the length of given string will not exceed 1,010.\r\n\r\n\r\nExample: \r\n\r\nInput:\r\n\"abccccdd\"\r\n\r\nOutput:\r\n7\r\n\r\nExplanation:\r\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int longestPalindrome(string s) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int longestPalindrome(String s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def longestPalindrome(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int longestPalindrome(char* s) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int LongestPalindrome(string s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {string} s\r\n * @return {number}\r\n */\r\nvar longestPalindrome = function(s) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} s\r\n# @return {Integer}\r\ndef longest_palindrome(s)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func longestPalindrome(_ s: String) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func longestPalindrome(s string) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def longestPalindrome(s: String): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'\"abccccdd\"'",
 "testable": true,
 "slug": "longest-palindrome",
 "category": "algorithms",
 "fname": "409.longest-palindrome.algorithms.py",
 "test_your": {
  "code_answer": [
   "7"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "32 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1502031299.23_784204_39"
 },
 "test_expected": {
  "code_answer": [
   "7"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "0 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1502031299.26_784204_39"
 },
 "submit_chart": [
  [
   "32",
   "0.6519"
  ],
  [
   "33",
   "0.1304"
  ],
  [
   "35",
   "3.7810"
  ],
  [
   "36",
   "1.6949"
  ],
  [
   "38",
   "2.3468"
  ],
  [
   "39",
   "7.5619"
  ],
  [
   "42",
   "11.7340"
  ],
  [
   "43",
   "1.1734"
  ],
  [
   "45",
   "9.3872"
  ],
  [
   "46",
   "4.6936"
  ],
  [
   "48",
   "4.0417"
  ],
  [
   "49",
   "10.6910"
  ],
  [
   "52",
   "9.5176"
  ],
  [
   "53",
   "0.3911"
  ],
  [
   "55",
   "4.5632"
  ],
  [
   "56",
   "3.3898"
  ],
  [
   "58",
   "1.9557"
  ],
  [
   "59",
   "3.5202"
  ],
  [
   "62",
   "4.8240"
  ],
  [
   "65",
   "2.4772"
  ],
  [
   "66",
   "1.1734"
  ],
  [
   "68",
   "2.0860"
  ],
  [
   "69",
   "2.0860"
  ],
  [
   "72",
   "2.3468"
  ],
  [
   "75",
   "0.5215"
  ],
  [
   "76",
   "0.1304"
  ],
  [
   "78",
   "0.1304"
  ],
  [
   "79",
   "0.6519"
  ],
  [
   "82",
   "0.6519"
  ],
  [
   "85",
   "0.2608"
  ],
  [
   "86",
   "0.2608"
  ],
  [
   "88",
   "0.1304"
  ],
  [
   "89",
   "0.2608"
  ],
  [
   "93",
   "0.1304"
  ],
  [
   "95",
   "0.3911"
  ],
  [
   "115",
   "0.1304"
  ],
  [
   "476",
   "0.1304"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 95,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "38 ms",
  "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 95,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 409,
  "name": "Your",
  "id": 112730438
 }
}