{"id": 283, "ids": "283", "state": "None", "name": "Move Zeroes", "key": "move-zeroes", "link": "https://leetcode.com/problems/move-zeroes", "locked": false, "percent": 49.59768923956231, "level": "Easy", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "\r\nGiven an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\r\n\r\n\r\n\r\nFor example, given nums  = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must do this in-place without making a copy of the array.\r\nMinimize the total number of operations.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    void moveZeroes(vector<int>& nums) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public void moveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def moveZeroes(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: void Do not return anything, modify nums in-place instead.\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "void moveZeroes(int* nums, int numsSize) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public void MoveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {void} Do not return anything, modify nums in-place instead.\r\n */\r\nvar moveZeroes = function(nums) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer[]} nums\r\n# @return {Void} Do not return anything, modify nums in-place instead.\r\ndef move_zeroes(nums)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\r\n    func moveZeroes(_ nums: inout [Int]) {\r\n        \r\n    }\r\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func moveZeroes(nums []int)  {\n    \n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def moveZeroes(nums: Array[Int]): Unit = {\n        \n    }\n}"}], "testcase": "'[0,1,0,3,12]'", "testable": true}