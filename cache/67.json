{
 "id": 67,
 "ids": "67",
 "state": "ac",
 "name": "Add Binary",
 "key": "add-binary",
 "link": "https://leetcode.com/problems/add-binary",
 "locked": false,
 "percent": 32.166311040131255,
 "level": "Easy",
 "starred": false,
 "fname": "67.add-binary.algorithms.py",
 "loaded": true,
 "totalAC": "147.5K",
 "totalSubmit": "458.5K",
 "desc": "\r\nGiven two binary strings, return their sum (also a binary string).\r\n\r\n\r\n\r\nFor example,\r\na = \"11\"\r\nb = \"1\"\r\nReturn \"100\".\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    string addBinary(string a, string b) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public String addBinary(String a, String b) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def addBinary(self, a, b):\r\n        \"\"\"\r\n        :type a: str\r\n        :type b: str\r\n        :rtype: str\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "char* addBinary(char* a, char* b) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public string AddBinary(string a, string b) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {string} a\r\n * @param {string} b\r\n * @return {string}\r\n */\r\nvar addBinary = function(a, b) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} a\r\n# @param {String} b\r\n# @return {String}\r\ndef add_binary(a, b)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func addBinary(_ a: String, _ b: String) -> String {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func addBinary(a string, b string) string {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def addBinary(a: String, b: String): String = {\n        \n    }\n}"
  }
 ],
 "testcase": "'\"0\"\\n\"0\"'",
 "testable": true,
 "slug": "add-binary",
 "category": "algorithms"
}