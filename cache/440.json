{
 "id": 440,
 "ids": "440",
 "state": "None",
 "name": "K-th Smallest in Lexicographical Order",
 "key": "k-th-smallest-in-lexicographical-order",
 "link": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order",
 "locked": false,
 "percent": 24.148183385859546,
 "level": "Hard",
 "starred": false,
 "loaded": true,
 "totalAC": "4.1K",
 "totalSubmit": "16.8K",
 "desc": "Given integers n and k, find the lexicographically k-th smallest integer in the range from 1 to n.\r\n\r\nNote: 1 \u2264 k \u2264 n \u2264 109.\r\n\r\nExample:\r\n\r\nInput:\r\nn: 13   k: 2\r\n\r\nOutput:\r\n10\r\n\r\nExplanation:\r\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\r\n\r\n\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int findKthNumber(int n, int k) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int findKthNumber(int n, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def findKthNumber(self, n, k):\r\n        \"\"\"\r\n        :type n: int\r\n        :type k: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int findKthNumber(int n, int k) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int FindKthNumber(int n, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number} n\r\n * @param {number} k\r\n * @return {number}\r\n */\r\nvar findKthNumber = function(n, k) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer} n\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef find_kth_number(n, k)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func findKthNumber(_ n: Int, _ k: Int) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func findKthNumber(n int, k int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def findKthNumber(n: Int, k: Int): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'13\\n2'",
 "testable": true,
 "slug": "k-th-smallest-in-lexicographical-order",
 "category": "algorithms",
 "fname": "440.k-th-smallest-in-lexicographical-order.algorithms.py"
}