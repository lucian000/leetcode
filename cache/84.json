{
 "id": 84,
 "ids": "84",
 "state": "None",
 "name": "Largest Rectangle in Histogram",
 "key": "largest-rectangle-in-histogram",
 "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
 "locked": false,
 "percent": 26.530355133443475,
 "level": "Hard",
 "starred": false,
 "loaded": true,
 "totalAC": "92.7K",
 "totalSubmit": "349.3K",
 "desc": "\r\nGiven n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n\r\n\r\n\r\n\r\nAbove is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].\r\n\r\n\r\n\r\n\r\nThe largest rectangle is shown in the shaded area, which has area = 10 unit.\r\n\r\n\r\n\r\nFor example,\r\nGiven heights = [2,1,5,6,2,3],\r\nreturn 10.\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int largestRectangleArea(vector<int>& heights) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int largestRectangleArea(int[] heights) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def largestRectangleArea(self, heights):\r\n        \"\"\"\r\n        :type heights: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int largestRectangleArea(int* heights, int heightsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int LargestRectangleArea(int[] heights) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} heights\r\n * @return {number}\r\n */\r\nvar largestRectangleArea = function(heights) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} heights\r\n# @return {Integer}\r\ndef largest_rectangle_area(heights)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func largestRectangleArea(_ heights: [Int]) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func largestRectangleArea(heights []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def largestRectangleArea(heights: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[2,1,5,6,2,3]'",
 "testable": true,
 "slug": "largest-rectangle-in-histogram",
 "category": "algorithms",
 "fname": "84.largest-rectangle-in-histogram.algorithms.py"
}