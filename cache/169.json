{
 "id": 169,
 "ids": "169",
 "state": "None",
 "name": "Majority Element",
 "key": "majority-element",
 "link": "https://leetcode.com/problems/majority-element",
 "locked": false,
 "percent": 46.40481337502204,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "200.1K",
 "totalSubmit": "431.2K",
 "desc": "Given an array of size n, find the majority element. The majority element is the element that appears more than \u230a n/2 \u230b times.\r\n\r\nYou may assume that the array is non-empty and the majority element always exist in the array.\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int majorityElement(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int majorityElement(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def majorityElement(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int majorityElement(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int MajorityElement(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar majorityElement = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef majority_element(nums)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func majorityElement(_ nums: [Int]) -> Int {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func majorityElement(nums []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def majorityElement(nums: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1]'",
 "testable": true,
 "slug": "majority-element",
 "category": "algorithms",
 "fname": "169.majority-element.algorithms.py",
 "test_your": {
  "code_answer": [
   "1"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "32 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1500873335.43_784204_4"
 },
 "test_expected": {
  "code_answer": [
   "1"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "49 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1500873335.45_784204_4"
 },
 "submit_chart": [
  [
   "42",
   "0.4893"
  ],
  [
   "45",
   "2.2018"
  ],
  [
   "46",
   "1.2232"
  ],
  [
   "48",
   "1.5291"
  ],
  [
   "49",
   "3.6086"
  ],
  [
   "52",
   "6.9113"
  ],
  [
   "53",
   "0.3058"
  ],
  [
   "55",
   "5.9939"
  ],
  [
   "56",
   "2.8135"
  ],
  [
   "58",
   "2.6300"
  ],
  [
   "59",
   "5.9939"
  ],
  [
   "62",
   "7.8287"
  ],
  [
   "63",
   "0.1835"
  ],
  [
   "65",
   "4.5872"
  ],
  [
   "66",
   "1.8349"
  ],
  [
   "68",
   "2.4465"
  ],
  [
   "69",
   "3.6086"
  ],
  [
   "72",
   "5.0765"
  ],
  [
   "73",
   "0.1223"
  ],
  [
   "75",
   "3.4862"
  ],
  [
   "76",
   "1.8960"
  ],
  [
   "78",
   "1.2844"
  ],
  [
   "79",
   "2.8746"
  ],
  [
   "82",
   "4.1590"
  ],
  [
   "83",
   "0.1223"
  ],
  [
   "85",
   "2.2630"
  ],
  [
   "86",
   "1.5291"
  ],
  [
   "88",
   "1.2232"
  ],
  [
   "89",
   "2.2630"
  ],
  [
   "92",
   "3.4251"
  ],
  [
   "93",
   "0.1223"
  ],
  [
   "95",
   "1.7737"
  ],
  [
   "96",
   "1.1009"
  ],
  [
   "98",
   "0.4281"
  ],
  [
   "99",
   "1.2232"
  ],
  [
   "102",
   "0.9786"
  ],
  [
   "105",
   "0.4893"
  ],
  [
   "106",
   "0.6116"
  ],
  [
   "108",
   "0.3058"
  ],
  [
   "109",
   "1.1009"
  ],
  [
   "112",
   "0.4281"
  ],
  [
   "115",
   "0.3670"
  ],
  [
   "116",
   "0.2446"
  ],
  [
   "118",
   "0.3058"
  ],
  [
   "119",
   "0.5505"
  ],
  [
   "122",
   "0.4281"
  ],
  [
   "125",
   "0.4281"
  ],
  [
   "126",
   "0.3058"
  ],
  [
   "128",
   "0.0612"
  ],
  [
   "129",
   "0.2446"
  ],
  [
   "132",
   "0.3058"
  ],
  [
   "135",
   "0.1835"
  ],
  [
   "136",
   "0.0612"
  ],
  [
   "138",
   "0.0612"
  ],
  [
   "139",
   "0.1835"
  ],
  [
   "142",
   "0.1835"
  ],
  [
   "145",
   "0.0612"
  ],
  [
   "146",
   "0.0612"
  ],
  [
   "148",
   "0.0612"
  ],
  [
   "149",
   "0.1835"
  ],
  [
   "152",
   "0.2446"
  ],
  [
   "155",
   "0.0612"
  ],
  [
   "156",
   "0.0612"
  ],
  [
   "162",
   "0.0612"
  ],
  [
   "172",
   "0.0612"
  ],
  [
   "175",
   "0.0612"
  ],
  [
   "179",
   "0.0612"
  ],
  [
   "182",
   "0.1223"
  ],
  [
   "185",
   "0.0612"
  ],
  [
   "186",
   "0.0612"
  ],
  [
   "189",
   "0.0612"
  ],
  [
   "222",
   "0.0612"
  ],
  [
   "235",
   "0.0612"
  ],
  [
   "236",
   "0.0612"
  ],
  [
   "262",
   "0.0612"
  ],
  [
   "265",
   "0.0612"
  ],
  [
   "269",
   "0.0612"
  ],
  [
   "295",
   "0.0612"
  ],
  [
   "305",
   "0.0612"
  ],
  [
   "312",
   "0.1223"
  ],
  [
   "316",
   "0.0612"
  ],
  [
   "329",
   "0.0612"
  ],
  [
   "336",
   "0.1223"
  ],
  [
   "338",
   "0.0612"
  ],
  [
   "339",
   "0.0612"
  ],
  [
   "358",
   "0.0612"
  ],
  [
   "379",
   "0.0612"
  ],
  [
   "389",
   "0.1223"
  ],
  [
   "425",
   "0.0612"
  ],
  [
   "429",
   "0.0612"
  ],
  [
   "439",
   "0.0612"
  ],
  [
   "442",
   "0.0612"
  ],
  [
   "485",
   "0.0612"
  ],
  [
   "509",
   "0.0612"
  ],
  [
   "522",
   "0.0612"
  ],
  [
   "528",
   "0.0612"
  ],
  [
   "529",
   "0.0612"
  ],
  [
   "538",
   "0.0612"
  ],
  [
   "546",
   "0.0612"
  ],
  [
   "575",
   "0.0612"
  ],
  [
   "585",
   "0.0612"
  ],
  [
   "602",
   "0.0612"
  ],
  [
   "666",
   "0.0612"
  ],
  [
   "675",
   "0.0612"
  ],
  [
   "735",
   "0.0612"
  ],
  [
   "738",
   "0.0612"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 44,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "59 ms",
  "compare_result": "11111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 44,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 169,
  "name": "Your",
  "id": 110900628
 }
}