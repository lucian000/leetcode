{
 "id": 283,
 "ids": "283",
 "state": "None",
 "name": "Move Zeroes",
 "key": "move-zeroes",
 "link": "https://leetcode.com/problems/move-zeroes",
 "locked": false,
 "percent": 49.639561523733,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "195.2K",
 "totalSubmit": "393.3K",
 "desc": "\r\nGiven an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\r\n\r\n\r\n\r\nFor example, given nums  = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].\r\n\r\n\r\n\r\nNote:\r\n\r\nYou must do this in-place without making a copy of the array.\r\nMinimize the total number of operations.\r\n\r\n\r\n\r\nCredits:Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    void moveZeroes(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public void moveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def moveZeroes(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: void Do not return anything, modify nums in-place instead.\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "void moveZeroes(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public void MoveZeroes(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {void} Do not return anything, modify nums in-place instead.\r\n */\r\nvar moveZeroes = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {Void} Do not return anything, modify nums in-place instead.\r\ndef move_zeroes(nums)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func moveZeroes(_ nums: inout [Int]) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func moveZeroes(nums []int)  {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def moveZeroes(nums: Array[Int]): Unit = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[0,1,0,3,12]'",
 "testable": true,
 "slug": "move-zeroes",
 "category": "algorithms",
 "fname": "283.move-zeroes.algorithms.py",
 "test_your": {
  "code_answer": [
   "[1,3,12,0,0]"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "28 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1501759117.95_784204_20"
 },
 "test_expected": {
  "code_answer": [
   "[1,3,12,0,0]"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "0 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1501759117.97_784204_20"
 },
 "submit_chart": [
  [
   "48",
   "0.0462"
  ],
  [
   "52",
   "1.4325"
  ],
  [
   "53",
   "0.3697"
  ],
  [
   "55",
   "6.2847"
  ],
  [
   "56",
   "4.6211"
  ],
  [
   "58",
   "3.6506"
  ],
  [
   "59",
   "10.8133"
  ],
  [
   "62",
   "11.8299"
  ],
  [
   "63",
   "0.3697"
  ],
  [
   "65",
   "5.9612"
  ],
  [
   "66",
   "2.9575"
  ],
  [
   "68",
   "2.1719"
  ],
  [
   "69",
   "4.8521"
  ],
  [
   "72",
   "6.0536"
  ],
  [
   "73",
   "0.0462"
  ],
  [
   "75",
   "2.5878"
  ],
  [
   "76",
   "1.7560"
  ],
  [
   "78",
   "0.8318"
  ],
  [
   "79",
   "1.9871"
  ],
  [
   "82",
   "1.6174"
  ],
  [
   "83",
   "0.0462"
  ],
  [
   "85",
   "1.2939"
  ],
  [
   "86",
   "0.6007"
  ],
  [
   "88",
   "0.2773"
  ],
  [
   "89",
   "0.5083"
  ],
  [
   "92",
   "1.3863"
  ],
  [
   "95",
   "0.7856"
  ],
  [
   "96",
   "0.1848"
  ],
  [
   "98",
   "0.2311"
  ],
  [
   "99",
   "0.6932"
  ],
  [
   "102",
   "0.5545"
  ],
  [
   "103",
   "0.0462"
  ],
  [
   "105",
   "0.4621"
  ],
  [
   "106",
   "0.1848"
  ],
  [
   "108",
   "0.1386"
  ],
  [
   "109",
   "0.0924"
  ],
  [
   "112",
   "0.5083"
  ],
  [
   "115",
   "0.1386"
  ],
  [
   "116",
   "0.1848"
  ],
  [
   "118",
   "0.0462"
  ],
  [
   "119",
   "0.1386"
  ],
  [
   "122",
   "0.2311"
  ],
  [
   "128",
   "0.0924"
  ],
  [
   "129",
   "0.0924"
  ],
  [
   "132",
   "0.1386"
  ],
  [
   "135",
   "0.2773"
  ],
  [
   "136",
   "0.2773"
  ],
  [
   "138",
   "0.2311"
  ],
  [
   "139",
   "0.4621"
  ],
  [
   "142",
   "0.6932"
  ],
  [
   "143",
   "0.0462"
  ],
  [
   "145",
   "0.3697"
  ],
  [
   "146",
   "0.2773"
  ],
  [
   "149",
   "0.5545"
  ],
  [
   "152",
   "0.5545"
  ],
  [
   "155",
   "0.5083"
  ],
  [
   "156",
   "0.2311"
  ],
  [
   "159",
   "0.1848"
  ],
  [
   "162",
   "0.3697"
  ],
  [
   "165",
   "0.1386"
  ],
  [
   "166",
   "0.1848"
  ],
  [
   "168",
   "0.0924"
  ],
  [
   "169",
   "0.0924"
  ],
  [
   "172",
   "0.1848"
  ],
  [
   "176",
   "0.0462"
  ],
  [
   "179",
   "0.0924"
  ],
  [
   "185",
   "0.0462"
  ],
  [
   "188",
   "0.0924"
  ],
  [
   "192",
   "0.0462"
  ],
  [
   "196",
   "0.0462"
  ],
  [
   "199",
   "0.0924"
  ],
  [
   "215",
   "0.0924"
  ],
  [
   "222",
   "0.2311"
  ],
  [
   "225",
   "0.0924"
  ],
  [
   "226",
   "0.0462"
  ],
  [
   "228",
   "0.0462"
  ],
  [
   "229",
   "0.0924"
  ],
  [
   "232",
   "0.0924"
  ],
  [
   "235",
   "0.1386"
  ],
  [
   "239",
   "0.1386"
  ],
  [
   "246",
   "0.0462"
  ],
  [
   "248",
   "0.0462"
  ],
  [
   "255",
   "0.0462"
  ],
  [
   "259",
   "0.0462"
  ],
  [
   "262",
   "0.0462"
  ],
  [
   "265",
   "0.0462"
  ],
  [
   "272",
   "0.3235"
  ],
  [
   "275",
   "0.0924"
  ],
  [
   "276",
   "0.1848"
  ],
  [
   "278",
   "0.0924"
  ],
  [
   "279",
   "0.2773"
  ],
  [
   "282",
   "0.3235"
  ],
  [
   "283",
   "0.0462"
  ],
  [
   "285",
   "0.2311"
  ],
  [
   "286",
   "0.0924"
  ],
  [
   "289",
   "0.1848"
  ],
  [
   "292",
   "0.2311"
  ],
  [
   "295",
   "0.1848"
  ],
  [
   "296",
   "0.0924"
  ],
  [
   "298",
   "0.0924"
  ],
  [
   "299",
   "0.0924"
  ],
  [
   "302",
   "0.2311"
  ],
  [
   "305",
   "0.0924"
  ],
  [
   "306",
   "0.0462"
  ],
  [
   "309",
   "0.0462"
  ],
  [
   "312",
   "0.2773"
  ],
  [
   "315",
   "0.1386"
  ],
  [
   "316",
   "0.0924"
  ],
  [
   "319",
   "0.0462"
  ],
  [
   "322",
   "0.0462"
  ],
  [
   "326",
   "0.0462"
  ],
  [
   "329",
   "0.0462"
  ],
  [
   "335",
   "0.0462"
  ],
  [
   "339",
   "0.0462"
  ],
  [
   "342",
   "0.0462"
  ],
  [
   "349",
   "0.0924"
  ],
  [
   "352",
   "0.0462"
  ],
  [
   "362",
   "0.0462"
  ],
  [
   "366",
   "0.0462"
  ],
  [
   "369",
   "0.1386"
  ],
  [
   "372",
   "0.0924"
  ],
  [
   "375",
   "0.0924"
  ],
  [
   "376",
   "0.0462"
  ],
  [
   "379",
   "0.0462"
  ],
  [
   "382",
   "0.0924"
  ],
  [
   "386",
   "0.0462"
  ],
  [
   "389",
   "0.0462"
  ],
  [
   "392",
   "0.0924"
  ],
  [
   "399",
   "0.0462"
  ],
  [
   "402",
   "0.0462"
  ],
  [
   "405",
   "0.0924"
  ],
  [
   "419",
   "0.0462"
  ],
  [
   "422",
   "0.0924"
  ],
  [
   "425",
   "0.0462"
  ],
  [
   "426",
   "0.0924"
  ],
  [
   "429",
   "0.0924"
  ],
  [
   "432",
   "0.0462"
  ],
  [
   "438",
   "0.0462"
  ],
  [
   "439",
   "0.0924"
  ],
  [
   "442",
   "0.0462"
  ],
  [
   "445",
   "0.0924"
  ],
  [
   "448",
   "0.0462"
  ],
  [
   "452",
   "0.0924"
  ],
  [
   "456",
   "0.0462"
  ],
  [
   "459",
   "0.0462"
  ],
  [
   "462",
   "0.0462"
  ],
  [
   "472",
   "0.0462"
  ],
  [
   "476",
   "0.0462"
  ],
  [
   "482",
   "0.0462"
  ],
  [
   "485",
   "0.0462"
  ],
  [
   "499",
   "0.0462"
  ],
  [
   "505",
   "0.0924"
  ],
  [
   "516",
   "0.0462"
  ],
  [
   "522",
   "0.0462"
  ],
  [
   "525",
   "0.0462"
  ],
  [
   "529",
   "0.0462"
  ],
  [
   "532",
   "0.0462"
  ],
  [
   "535",
   "0.0462"
  ],
  [
   "542",
   "0.0462"
  ],
  [
   "545",
   "0.0462"
  ],
  [
   "546",
   "0.0462"
  ],
  [
   "548",
   "0.0462"
  ],
  [
   "549",
   "0.0462"
  ],
  [
   "555",
   "0.0924"
  ],
  [
   "559",
   "0.0924"
  ],
  [
   "562",
   "0.0462"
  ],
  [
   "572",
   "0.0462"
  ],
  [
   "576",
   "0.0924"
  ],
  [
   "579",
   "0.0462"
  ],
  [
   "589",
   "0.0462"
  ],
  [
   "598",
   "0.0462"
  ],
  [
   "599",
   "0.0924"
  ],
  [
   "606",
   "0.0462"
  ],
  [
   "609",
   "0.0924"
  ],
  [
   "615",
   "0.0924"
  ],
  [
   "616",
   "0.0462"
  ],
  [
   "629",
   "0.0462"
  ],
  [
   "632",
   "0.0924"
  ],
  [
   "636",
   "0.0462"
  ],
  [
   "652",
   "0.0924"
  ],
  [
   "665",
   "0.0462"
  ],
  [
   "669",
   "0.0462"
  ],
  [
   "672",
   "0.0462"
  ],
  [
   "675",
   "0.0924"
  ],
  [
   "679",
   "0.0462"
  ],
  [
   "689",
   "0.0462"
  ],
  [
   "695",
   "0.0924"
  ],
  [
   "702",
   "0.0462"
  ],
  [
   "705",
   "0.0924"
  ],
  [
   "709",
   "0.0462"
  ],
  [
   "712",
   "0.0462"
  ],
  [
   "726",
   "0.0462"
  ],
  [
   "728",
   "0.0462"
  ],
  [
   "729",
   "0.0924"
  ],
  [
   "732",
   "0.0462"
  ],
  [
   "735",
   "0.0462"
  ],
  [
   "742",
   "0.0924"
  ],
  [
   "745",
   "0.0462"
  ],
  [
   "768",
   "0.0462"
  ],
  [
   "769",
   "0.0462"
  ],
  [
   "772",
   "0.0462"
  ],
  [
   "776",
   "0.0462"
  ],
  [
   "778",
   "0.0462"
  ],
  [
   "782",
   "0.0924"
  ],
  [
   "796",
   "0.0924"
  ],
  [
   "798",
   "0.0462"
  ],
  [
   "799",
   "0.0462"
  ],
  [
   "802",
   "0.0462"
  ],
  [
   "803",
   "0.0462"
  ],
  [
   "805",
   "0.0924"
  ],
  [
   "806",
   "0.1386"
  ],
  [
   "808",
   "0.0462"
  ],
  [
   "809",
   "0.0924"
  ],
  [
   "816",
   "0.0462"
  ],
  [
   "819",
   "0.1386"
  ],
  [
   "825",
   "0.0462"
  ],
  [
   "829",
   "0.0462"
  ],
  [
   "835",
   "0.0924"
  ],
  [
   "838",
   "0.0462"
  ],
  [
   "839",
   "0.0462"
  ],
  [
   "845",
   "0.0462"
  ],
  [
   "849",
   "0.0462"
  ],
  [
   "855",
   "0.0924"
  ],
  [
   "859",
   "0.0924"
  ],
  [
   "862",
   "0.0462"
  ],
  [
   "865",
   "0.1848"
  ],
  [
   "868",
   "0.0462"
  ],
  [
   "879",
   "0.0924"
  ],
  [
   "885",
   "0.0462"
  ],
  [
   "889",
   "0.0462"
  ],
  [
   "895",
   "0.0462"
  ],
  [
   "919",
   "0.0462"
  ],
  [
   "922",
   "0.0462"
  ],
  [
   "926",
   "0.0462"
  ],
  [
   "928",
   "0.0462"
  ],
  [
   "935",
   "0.0462"
  ],
  [
   "945",
   "0.0462"
  ],
  [
   "949",
   "0.0462"
  ],
  [
   "952",
   "0.0462"
  ],
  [
   "969",
   "0.0462"
  ],
  [
   "979",
   "0.0462"
  ],
  [
   "985",
   "0.0462"
  ],
  [
   "989",
   "0.0462"
  ],
  [
   "992",
   "0.0924"
  ],
  [
   "998",
   "0.0462"
  ],
  [
   "1002",
   "0.0462"
  ],
  [
   "1035",
   "0.0462"
  ],
  [
   "1086",
   "0.0462"
  ],
  [
   "1095",
   "0.0462"
  ],
  [
   "1105",
   "0.0462"
  ],
  [
   "1115",
   "0.0462"
  ],
  [
   "1132",
   "0.0462"
  ],
  [
   "1149",
   "0.0462"
  ],
  [
   "1162",
   "0.0462"
  ],
  [
   "1169",
   "0.0924"
  ],
  [
   "1192",
   "0.0462"
  ],
  [
   "1205",
   "0.0462"
  ],
  [
   "1206",
   "0.0462"
  ],
  [
   "1242",
   "0.0462"
  ],
  [
   "1248",
   "0.0462"
  ],
  [
   "1265",
   "0.0462"
  ],
  [
   "1275",
   "0.0462"
  ],
  [
   "1335",
   "0.0462"
  ],
  [
   "1358",
   "0.0462"
  ],
  [
   "1395",
   "0.0462"
  ],
  [
   "1443",
   "0.0462"
  ],
  [
   "1499",
   "0.0462"
  ],
  [
   "1502",
   "0.0462"
  ],
  [
   "1585",
   "0.0462"
  ],
  [
   "1589",
   "0.0462"
  ],
  [
   "1595",
   "0.0462"
  ],
  [
   "1765",
   "0.0462"
  ],
  [
   "1818",
   "0.0462"
  ],
  [
   "1825",
   "0.0462"
  ],
  [
   "1829",
   "0.0462"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 21,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "152 ms",
  "compare_result": "111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 21,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 283,
  "name": "Your",
  "id": 112328604
 }
}