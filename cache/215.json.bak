{"id": 215, "ids": "215", "state": "None", "name": "Kth Largest Element in an Array", "key": "kth-largest-element-in-an-array", "link": "https://leetcode.com/problems/kth-largest-element-in-an-array", "locked": false, "percent": 38.95016322338286, "level": "Medium", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\nFor example,\r\nGiven [3,2,1,5,6,4] and k = 2, return 5.\r\n\r\n\r\nNote: \r\nYou may assume k is always valid, 1 ? k ? array's length.\r\n\r\nCredits:Special thanks to @mithmatt for adding this problem and creating all test cases.", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    int findKthLargest(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int findKthLargest(int[] nums, int k) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def findKthLargest(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: int\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "int findKthLargest(int* nums, int numsSize, int k) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int FindKthLargest(int[] nums, int k) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {number}\r\n */\r\nvar findKthLargest = function(nums, k) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Integer}\r\ndef find_kth_largest(nums, k)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\n    func findKthLargest(_ nums: [Int], _ k: Int) -> Int {\n        \n    }\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func findKthLargest(nums []int, k int) int {\n    \n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def findKthLargest(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"}], "testcase": "'[1]\\n1'", "testable": true}