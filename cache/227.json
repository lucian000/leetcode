{"id": 227, "ids": "227", "state": "None", "name": "Basic Calculator II", "key": "basic-calculator-ii", "link": "https://leetcode.com/problems/basic-calculator-ii", "locked": false, "percent": 29.084493188412925, "level": "Medium", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "Implement a basic calculator to evaluate a simple expression string.\r\n\r\nThe expression string contains only non-negative integers, +, -, *, / operators and empty spaces  . The integer division should truncate toward zero.\r\n\r\nYou may assume that the given expression is always valid.\r\n\r\nSome examples:\r\n\r\n\"3+2*2\" = 7\r\n\" 3/2 \" = 1\r\n\" 3+5 / 2 \" = 5\r\n\r\n\r\n\r\n\r\nNote: Do not use the eval built-in library function.\r\n\r\n\r\nCredits:Special thanks to @ts for adding this problem and creating all test cases.", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    int calculate(string s) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int calculate(String s) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def calculate(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: int\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "int calculate(char* s) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int Calculate(string s) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {string} s\r\n * @return {number}\r\n */\r\nvar calculate = function(s) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {String} s\r\n# @return {Integer}\r\ndef calculate(s)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\n    func calculate(_ s: String) -> Int {\n        \n    }\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func calculate(s string) int {\n    \n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def calculate(s: String): Int = {\n        \n    }\n}"}], "testcase": "\"0\"", "testable": true}