{
 "id": 20,
 "ids": "20",
 "state": "None",
 "name": "Valid Parentheses",
 "key": "valid-parentheses",
 "link": "https://leetcode.com/problems/valid-parentheses",
 "locked": false,
 "percent": 33.2828665937127,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "214.1K",
 "totalSubmit": "643.3K",
 "desc": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\r\n\r\nThe brackets must close in the correct order, \"()\" and \"()[]{}\" are all valid but \"(]\" and \"([)]\" are not.\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    bool isValid(string s) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public boolean isValid(String s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def isValid(self, s):\r\n        \"\"\"\r\n        :type s: str\r\n        :rtype: bool\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "bool isValid(char* s) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public bool IsValid(string s) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {string} s\r\n * @return {boolean}\r\n */\r\nvar isValid = function(s) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {String} s\r\n# @return {Boolean}\r\ndef is_valid(s)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\r\n    func isValid(_ s: String) -> Bool {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func isValid(s string) bool {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def isValid(s: String): Boolean = {\n        \n    }\n}"
  }
 ],
 "testcase": "'\"[\"'",
 "testable": true,
 "slug": "valid-parentheses",
 "category": "algorithms",
 "fname": "20.valid-parentheses.algorithms.py",
 "test_your": {
  "code_answer": [
   "false"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "29 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1502025311.61_784204_23"
 },
 "test_expected": {
  "code_answer": [
   "false"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "39 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1502025311.63_784204_23"
 },
 "submit_chart": [
  [
   "28",
   "0.0307"
  ],
  [
   "32",
   "1.7173"
  ],
  [
   "33",
   "0.1840"
  ],
  [
   "35",
   "5.7344"
  ],
  [
   "36",
   "4.6305"
  ],
  [
   "38",
   "5.3665"
  ],
  [
   "39",
   "14.9034"
  ],
  [
   "42",
   "16.9273"
  ],
  [
   "43",
   "0.7973"
  ],
  [
   "45",
   "7.5437"
  ],
  [
   "46",
   "4.9985"
  ],
  [
   "48",
   "2.6679"
  ],
  [
   "49",
   "6.4091"
  ],
  [
   "52",
   "5.5504"
  ],
  [
   "53",
   "0.0920"
  ],
  [
   "55",
   "2.6066"
  ],
  [
   "56",
   "1.8399"
  ],
  [
   "58",
   "1.1653"
  ],
  [
   "59",
   "2.0852"
  ],
  [
   "62",
   "3.0359"
  ],
  [
   "63",
   "0.0613"
  ],
  [
   "65",
   "1.6866"
  ],
  [
   "66",
   "0.6440"
  ],
  [
   "68",
   "0.3680"
  ],
  [
   "69",
   "1.1653"
  ],
  [
   "72",
   "0.9200"
  ],
  [
   "75",
   "0.4906"
  ],
  [
   "76",
   "0.3680"
  ],
  [
   "78",
   "0.0613"
  ],
  [
   "79",
   "0.3987"
  ],
  [
   "82",
   "0.2147"
  ],
  [
   "85",
   "0.2453"
  ],
  [
   "86",
   "0.1840"
  ],
  [
   "88",
   "0.0613"
  ],
  [
   "89",
   "0.0920"
  ],
  [
   "92",
   "0.5826"
  ],
  [
   "93",
   "0.0920"
  ],
  [
   "95",
   "0.3680"
  ],
  [
   "96",
   "0.1533"
  ],
  [
   "98",
   "0.1227"
  ],
  [
   "99",
   "0.2453"
  ],
  [
   "102",
   "0.4293"
  ],
  [
   "103",
   "0.0307"
  ],
  [
   "105",
   "0.2147"
  ],
  [
   "106",
   "0.2453"
  ],
  [
   "108",
   "0.1840"
  ],
  [
   "109",
   "0.2760"
  ],
  [
   "112",
   "0.2147"
  ],
  [
   "115",
   "0.1533"
  ],
  [
   "116",
   "0.0307"
  ],
  [
   "119",
   "0.1227"
  ],
  [
   "122",
   "0.0307"
  ],
  [
   "125",
   "0.0613"
  ],
  [
   "126",
   "0.0307"
  ],
  [
   "128",
   "0.0307"
  ],
  [
   "129",
   "0.0613"
  ],
  [
   "132",
   "0.1227"
  ],
  [
   "138",
   "0.0307"
  ],
  [
   "139",
   "0.0307"
  ],
  [
   "142",
   "0.0307"
  ],
  [
   "152",
   "0.0920"
  ],
  [
   "162",
   "0.0613"
  ],
  [
   "169",
   "0.0307"
  ],
  [
   "179",
   "0.0613"
  ],
  [
   "182",
   "0.0307"
  ],
  [
   "205",
   "0.0307"
  ],
  [
   "236",
   "0.0307"
  ],
  [
   "242",
   "0.0307"
  ],
  [
   "342",
   "0.0307"
  ],
  [
   "349",
   "0.0307"
  ],
  [
   "356",
   "0.0307"
  ],
  [
   "382",
   "0.0307"
  ],
  [
   "432",
   "0.0307"
  ],
  [
   "498",
   "0.0307"
  ],
  [
   "578",
   "0.0307"
  ],
  [
   "579",
   "0.0307"
  ],
  [
   "595",
   "0.0307"
  ],
  [
   "609",
   "0.0307"
  ],
  [
   "682",
   "0.0613"
  ],
  [
   "699",
   "0.0307"
  ],
  [
   "709",
   "0.0307"
  ],
  [
   "716",
   "0.0307"
  ],
  [
   "859",
   "0.0307"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 73,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "35 ms",
  "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 73,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 20,
  "name": "Your",
  "id": 112723083
 }
}