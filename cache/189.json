{
 "id": 189,
 "ids": "189",
 "state": "None",
 "name": "Rotate Array",
 "key": "rotate-array",
 "link": "https://leetcode.com/problems/rotate-array",
 "locked": false,
 "percent": 24.4226830421115,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "",
 "totalSubmit": "",
 "desc": "Rotate an array of n elements to the right by k steps.\r\nFor example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. \r\n\r\nNote:\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n\r\n\r\n[show hint]\r\nHint:\r\nCould you do it in-place with O(1) extra space?\r\n\r\n\r\nRelated problem: Reverse Words in a String II\r\n\r\nCredits:Special thanks to @Freezen for adding this problem and creating all test cases.",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    void rotate(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public void rotate(int[] nums, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def rotate(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: void Do not return anything, modify nums in-place instead.\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "void rotate(int* nums, int numsSize, int k) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public void Rotate(int[] nums, int k) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {void} Do not return anything, modify nums in-place instead.\r\n */\r\nvar rotate = function(nums, k) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Void} Do not return anything, modify nums in-place instead.\r\ndef rotate(nums, k)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func rotate(_ nums: inout [Int], _ k: Int) {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func rotate(nums []int, k int)  {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def rotate(nums: Array[Int], k: Int): Unit = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1]\\n0'",
 "testable": true
}