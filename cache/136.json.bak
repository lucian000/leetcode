{
 "id": 136,
 "ids": "136",
 "state": "None",
 "name": "Single Number",
 "key": "single-number",
 "link": "https://leetcode.com/problems/single-number",
 "locked": false,
 "percent": 54.22393773928325,
 "level": "Easy",
 "starred": false,
 "loaded": true,
 "totalAC": "224.7K",
 "totalSubmit": "414.3K",
 "desc": "Given an array of integers, every element appears twice except for one. Find that single one.\r\n\r\n\r\nNote:\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int singleNumber(vector<int>& nums) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int singleNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def singleNumber(self, nums):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int singleNumber(int* nums, int numsSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int SingleNumber(int[] nums) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar singleNumber = function(nums) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef single_number(nums)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func singleNumber(_ nums: [Int]) -> Int {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func singleNumber(nums []int) int {\r\n    \r\n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def singleNumber(nums: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[1]'",
 "testable": true,
 "slug": "single-number",
 "category": "algorithms",
 "fname": "136.single-number.algorithms.py",
 "test_your": {
  "code_answer": [
   "1"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "72 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Your",
  "id": "interpret_1500964493.8_784204_17"
 },
 "test_expected": {
  "code_answer": [
   "1"
  ],
  "code_output": [],
  "status_code": 10,
  "status_runtime": "39 ms",
  "run_success": true,
  "state": "SUCCESS",
  "total_correct": null,
  "display_runtime": "",
  "total_testcases": null,
  "name": "Expected",
  "id": "interpret_expected_1500964493.81_784204_17"
 },
 "submit_chart": [
  [
   "32",
   "0.0511"
  ],
  [
   "35",
   "0.4601"
  ],
  [
   "36",
   "0.2045"
  ],
  [
   "38",
   "2.5562"
  ],
  [
   "39",
   "5.2147"
  ],
  [
   "42",
   "12.4233"
  ],
  [
   "43",
   "0.6646"
  ],
  [
   "45",
   "8.4867"
  ],
  [
   "46",
   "5.6237"
  ],
  [
   "48",
   "3.7321"
  ],
  [
   "49",
   "8.6912"
  ],
  [
   "52",
   "10.0204"
  ],
  [
   "53",
   "0.8691"
  ],
  [
   "55",
   "5.5215"
  ],
  [
   "56",
   "3.1697"
  ],
  [
   "58",
   "2.6585"
  ],
  [
   "59",
   "3.9877"
  ],
  [
   "62",
   "5.7260"
  ],
  [
   "63",
   "0.1534"
  ],
  [
   "65",
   "2.5051"
  ],
  [
   "66",
   "1.6871"
  ],
  [
   "68",
   "1.0225"
  ],
  [
   "69",
   "1.8916"
  ],
  [
   "72",
   "2.6585"
  ],
  [
   "73",
   "0.0511"
  ],
  [
   "75",
   "1.0225"
  ],
  [
   "76",
   "0.5624"
  ],
  [
   "78",
   "0.4601"
  ],
  [
   "79",
   "1.0225"
  ],
  [
   "82",
   "1.0736"
  ],
  [
   "83",
   "0.0511"
  ],
  [
   "85",
   "0.6646"
  ],
  [
   "86",
   "0.2045"
  ],
  [
   "88",
   "0.1022"
  ],
  [
   "89",
   "0.6135"
  ],
  [
   "92",
   "0.6135"
  ],
  [
   "95",
   "0.2556"
  ],
  [
   "96",
   "0.1022"
  ],
  [
   "98",
   "0.2556"
  ],
  [
   "99",
   "0.1022"
  ],
  [
   "102",
   "0.0511"
  ],
  [
   "105",
   "0.3067"
  ],
  [
   "106",
   "0.0511"
  ],
  [
   "115",
   "0.0511"
  ],
  [
   "116",
   "0.1022"
  ],
  [
   "118",
   "0.1022"
  ],
  [
   "119",
   "0.0511"
  ],
  [
   "126",
   "0.1022"
  ],
  [
   "129",
   "0.0511"
  ],
  [
   "139",
   "0.1022"
  ],
  [
   "145",
   "0.1022"
  ],
  [
   "152",
   "0.0511"
  ],
  [
   "159",
   "0.0511"
  ],
  [
   "166",
   "0.0511"
  ],
  [
   "169",
   "0.0511"
  ],
  [
   "172",
   "0.2556"
  ],
  [
   "175",
   "0.0511"
  ],
  [
   "176",
   "0.1022"
  ],
  [
   "182",
   "0.0511"
  ],
  [
   "185",
   "0.1022"
  ],
  [
   "186",
   "0.0511"
  ],
  [
   "189",
   "0.1022"
  ],
  [
   "202",
   "0.1022"
  ],
  [
   "206",
   "0.0511"
  ],
  [
   "215",
   "0.0511"
  ],
  [
   "235",
   "0.0511"
  ],
  [
   "242",
   "0.0511"
  ],
  [
   "246",
   "0.0511"
  ],
  [
   "252",
   "0.0511"
  ],
  [
   "288",
   "0.0511"
  ],
  [
   "312",
   "0.0511"
  ],
  [
   "369",
   "0.0511"
  ],
  [
   "436",
   "0.0511"
  ],
  [
   "536",
   "0.0511"
  ],
  [
   "556",
   "0.0511"
  ],
  [
   "618",
   "0.0511"
  ],
  [
   "712",
   "0.0511"
  ],
  [
   "852",
   "0.0511"
  ]
 ],
 "submit_your": {
  "lang": "python",
  "total_testcases": 15,
  "user_id": 784204,
  "code_output": "",
  "status_code": 10,
  "status_runtime": "68 ms",
  "compare_result": "111111111111111",
  "display_runtime": "",
  "state": "SUCCESS",
  "total_correct": 15,
  "run_success": true,
  "judge_type": "large",
  "std_output": "",
  "question_id": 136,
  "name": "Your",
  "id": 111052027
 }
}