{"id": 542, "ids": "542", "state": "None", "name": "01 Matrix", "key": "01-matrix", "link": "https://leetcode.com/problems/01-matrix", "locked": false, "percent": 33.07816929931146, "level": "Medium", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "\r\nGiven a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\r\n\r\nThe distance between two adjacent cells is 1.\r\n\r\nExample 1: \r\nInput:\r\n\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n\r\nOutput:\r\n\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n\r\n\r\n\r\nExample 2: \r\nInput:\r\n\r\n0 0 0\r\n0 1 0\r\n1 1 1\r\n\r\nOutput:\r\n\r\n0 0 0\r\n0 1 0\r\n1 2 1\r\n\r\n\r\n\r\nNote:\r\n\r\nThe number of elements of the given matrix will not exceed 10,000.\r\nThere are at least one 0 in the given matrix.\r\nThe cells are adjacent in only four directions: up, down, left and right.\r\n\r\n\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int[][] updateMatrix(int[][] matrix) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def updateMatrix(self, matrix):\r\n        \"\"\"\r\n        :type matrix: List[List[int]]\r\n        :rtype: List[List[int]]\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "/**\r\n * Return an array of arrays of size *returnSize.\r\n * The sizes of the arrays are returned as *columnSizes array.\r\n * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().\r\n */\r\nint** updateMatrix(int** matrix, int matrixRowSize, int matrixColSize, int** columnSizes, int* returnSize) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int[,] UpdateMatrix(int[,] matrix) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number[][]} matrix\r\n * @return {number[][]}\r\n */\r\nvar updateMatrix = function(matrix) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer[][]} matrix\r\n# @return {Integer[][]}\r\ndef update_matrix(matrix)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\r\n    func updateMatrix(_ matrix: [[Int]]) -> [[Int]] {\r\n        \r\n    }\r\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func updateMatrix(matrix [][]int) [][]int {\r\n    \r\n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def updateMatrix(matrix: Array[Array[Int]]): Array[Array[Int]] = {\n        \n    }\n}"}], "testcase": "[[0,0,0],[0,1,0],[0,0,0]]", "testable": true}