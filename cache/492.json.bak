{"id": 492, "ids": "492", "state": "None", "name": "Construct the Rectangle", "key": "construct-the-rectangle", "link": "https://leetcode.com/problems/construct-the-rectangle", "locked": false, "percent": 48.62050531111266, "level": "Easy", "starred": false, "loaded": true, "totalAC": "", "totalSubmit": "", "desc": "\r\nFor a web developer, it is very important to know how to design a web page's size. So, given a specific rectangular web page\u2019s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\r\n1. The area of the rectangular web page you designed must equal to the given target area.\r\n2. The width W should not be larger than the length L, which means L >= W.\r\n3. The difference between length L and width W should be as small as possible.\r\n\r\nYou need to output the length L and the width W of the web page you designed in sequence.\r\n\r\n\r\n\r\nExample:\r\n\r\nInput: 4\r\nOutput: [2, 2]\r\nExplanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \r\nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\r\n\r\n\r\n\r\nNote:\r\n\r\nThe given area won't exceed 10,000,000 and is a positive integer\r\nThe web page's width and length you designed must be positive integers.\r\n\r\n", "templates": [{"value": "cpp", "text": "C++", "defaultCode": "class Solution {\r\npublic:\r\n    vector<int> constructRectangle(int area) {\r\n        \r\n    }\r\n};"}, {"value": "java", "text": "Java", "defaultCode": "public class Solution {\r\n    public int[] constructRectangle(int area) {\r\n        \r\n    }\r\n}"}, {"value": "python", "text": "Python", "defaultCode": "class Solution(object):\r\n    def constructRectangle(self, area):\r\n        \"\"\"\r\n        :type area: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "}, {"value": "c", "text": "C", "defaultCode": "/**\r\n * Return an array of size *returnSize.\r\n * Note: The returned array must be malloced, assume caller calls free().\r\n */\r\nint* constructRectangle(int area, int* returnSize) {\r\n    \r\n}"}, {"value": "csharp", "text": "C#", "defaultCode": "public class Solution {\r\n    public int[] ConstructRectangle(int area) {\r\n        \r\n    }\r\n}"}, {"value": "javascript", "text": "JavaScript", "defaultCode": "/**\r\n * @param {number} area\r\n * @return {number[]}\r\n */\r\nvar constructRectangle = function(area) {\r\n    \r\n};"}, {"value": "ruby", "text": "Ruby", "defaultCode": "# @param {Integer} area\r\n# @return {Integer[]}\r\ndef construct_rectangle(area)\r\n    \r\nend"}, {"value": "swift", "text": "Swift", "defaultCode": "class Solution {\r\n    func constructRectangle(_ area: Int) -> [Int] {\r\n        \r\n    }\r\n}"}, {"value": "golang", "text": "Go", "defaultCode": "func constructRectangle(area int) []int {\r\n    \r\n}"}, {"value": "scala", "text": "Scala", "defaultCode": "object Solution {\n    def constructRectangle(area: Int): Array[Int] = {\n        \n    }\n}"}], "testcase": "'1'", "testable": true}