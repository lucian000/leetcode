{
 "id": 123,
 "ids": "123",
 "state": "None",
 "name": "Best Time to Buy and Sell Stock III",
 "key": "best-time-to-buy-and-sell-stock-iii",
 "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
 "locked": false,
 "percent": 29.101472792069117,
 "level": "Hard",
 "starred": false,
 "loaded": true,
 "totalAC": "86.8K",
 "totalSubmit": "298.3K",
 "desc": "Say you have an array for which the ith element is the price of a given stock on day i.\r\n\r\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\r\n\r\nNote:\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).",
 "templates": [
  {
   "value": "cpp",
   "text": "C++",
   "defaultCode": "class Solution {\r\npublic:\r\n    int maxProfit(vector<int>& prices) {\r\n        \r\n    }\r\n};"
  },
  {
   "value": "java",
   "text": "Java",
   "defaultCode": "public class Solution {\r\n    public int maxProfit(int[] prices) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "python",
   "text": "Python",
   "defaultCode": "class Solution(object):\r\n    def maxProfit(self, prices):\r\n        \"\"\"\r\n        :type prices: List[int]\r\n        :rtype: int\r\n        \"\"\"\r\n        "
  },
  {
   "value": "c",
   "text": "C",
   "defaultCode": "int maxProfit(int* prices, int pricesSize) {\r\n    \r\n}"
  },
  {
   "value": "csharp",
   "text": "C#",
   "defaultCode": "public class Solution {\r\n    public int MaxProfit(int[] prices) {\r\n        \r\n    }\r\n}"
  },
  {
   "value": "javascript",
   "text": "JavaScript",
   "defaultCode": "/**\r\n * @param {number[]} prices\r\n * @return {number}\r\n */\r\nvar maxProfit = function(prices) {\r\n    \r\n};"
  },
  {
   "value": "ruby",
   "text": "Ruby",
   "defaultCode": "# @param {Integer[]} prices\r\n# @return {Integer}\r\ndef max_profit(prices)\r\n    \r\nend"
  },
  {
   "value": "swift",
   "text": "Swift",
   "defaultCode": "class Solution {\n    func maxProfit(_ prices: [Int]) -> Int {\n        \n    }\n}"
  },
  {
   "value": "golang",
   "text": "Go",
   "defaultCode": "func maxProfit(prices []int) int {\n    \n}"
  },
  {
   "value": "scala",
   "text": "Scala",
   "defaultCode": "object Solution {\n    def maxProfit(prices: Array[Int]): Int = {\n        \n    }\n}"
  }
 ],
 "testcase": "'[]'",
 "testable": true,
 "slug": "best-time-to-buy-and-sell-stock-iii",
 "category": "algorithms",
 "fname": "123.best-time-to-buy-and-sell-stock-iii.algorithms.py"
}